{"version":3,"sources":["script.js"],"names":["window","addEventListener","Slider","selector","options","$el","document","querySelector","minValue","maxValue","curValue","render","$sliderLine","$roller","$sliderValue","$sliderTable","$input","initCurValue","scroll","insertAdjacentHTML","e","preventDefault","shiftX","clientX","getBoundingClientRect","left","mouseMove","newLeft","rightEdge","offsetWidth","style","valueOnSlider","Math","round","parseInt","textContent","value","mouseUp","removeEventListener","alert","slider","slider1"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"../src","sourcesContent":["'use strict';\nwindow.addEventListener('DOMContentLoaded', function() {\n\n  class Slider {\n    constructor(selector, options) {\n      this.$el = document.querySelector(selector);\n      this.minValue = options.minValue;\n      this.maxValue = options.maxValue;\n      this.curValue = options.curValue;\n      this.render();\n      this.$sliderLine = this.$el.querySelector('.ad-slider__line');\n      this.$roller = this.$el.querySelector('.ad-slider__roller');\n      this.$sliderValue = this.$el.querySelector('.ad-slider__number');\n      this.$sliderTable = this.$el.querySelector('.ad-slider__value');\n      this.$input = this.$el.querySelector('.ad-slider__input');\n      this.initCurValue();\n      this.scroll();\n    }\n\n    render() {\n      this.$el.insertAdjacentHTML('afterbegin', `\n      <div class=\"ad-slider__input\"></div>\n      <div class=\"ad-slider\">\n        <div class=\"ad-slider__line\">\n          <div class=\"ad-slider__roller\"></div>\n        </div>\n        <div class=\"ad-slider__value\">\n          <p class=\"ad-slider__number\"></p>\n        </div>\n      </div>\n      `);\n    }\n\n    scroll() {\n      this.$roller.addEventListener('mousedown', e => {\n        e.preventDefault();\n        const shiftX = e.clientX - this.$roller.getBoundingClientRect().left;\n        const mouseMove = e => {\n          let newLeft = e.clientX - shiftX - this.$sliderLine.getBoundingClientRect().left;\n          let rightEdge = this.$sliderLine.offsetWidth - this.$roller.offsetWidth;\n          if (newLeft < 0) {\n            newLeft = 0;\n          }\n          if (newLeft > rightEdge) {\n            newLeft = rightEdge;\n          }\n          this.$roller.style.left = newLeft + 'px';\n          const valueOnSlider = Math.round(this.minValue + (this.maxValue - this.minValue) * (parseInt(newLeft, 10) / rightEdge));\n          this.$sliderValue.textContent = valueOnSlider;\n          this.$sliderTable.style.left = newLeft + this.$roller.offsetWidth / 2 + 'px';\n          this.$input.value = valueOnSlider;\n        };\n\n        function mouseUp() {\n          document.removeEventListener('mouseup', mouseUp);\n          document.removeEventListener('mousemove', mouseMove);\n        }\n        document.addEventListener('mousemove', mouseMove);\n        document.addEventListener('mouseup', mouseUp);\n      });\n      document.addEventListener('dragstart', () => false);\n    }\n\n    initCurValue() {\n      const rightEdge = this.$sliderLine.offsetWidth - this.$roller.offsetWidth;\n      if (this.curValue > this.maxValue || this.curValue < this.minValue) {\n        alert('Текщее значение введено вне интервала между минимальным и максимальным значением');\n      } else {\n        this.$sliderValue.textContent = this.curValue;\n        const newLeft = Math.round(rightEdge * (this.curValue - this.minValue) / (this.maxValue - this.minValue));\n        this.$roller.style.left = newLeft + 'px';\n        this.$sliderTable.style.left = newLeft + this.$roller.offsetWidth / 2 + 'px';\n        this.$input.value = this.curValue;\n      }\n    }\n\n\n  }\n\n\n  const slider = new Slider('.container', {\n    minValue: 1000000,\n    maxValue: 1000000000,\n    curValue: 50000000\n  });\n\n\n  const slider1 = new Slider('.container1', {\n    minValue: 1,\n    maxValue: 10,\n    curValue: 5\n  });\n});"]}