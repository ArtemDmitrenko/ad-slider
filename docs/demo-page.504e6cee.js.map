{"mappings":"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","sources":["src/demo/components/demo-slider/demo-slider-init.ts","src/demo/components/demo-slider/DemoSlider.ts","src/demo/components/input/Input.ts","src/demo/components/checkbox/Checkbox.ts","src/demo/pages/demo-page/demo-page.ts"],"sourcesContent":["import DemoSlider from './DemoSlider';\n\nexport default function demoSlidersInit(): void {\n  const demoSliderContainers = document.querySelectorAll('.js-demo-slider');\n  demoSliderContainers.forEach((item) => {\n    new DemoSlider(item as HTMLElement);\n  });\n}\n","import Input from '../input/Input';\nimport Checkbox from '../checkbox/Checkbox';\n\ntype Config = {\n  limits: {\n    min: number;\n    max: number;\n  };\n  curValue: number;\n  showValueNote: boolean;\n  step: number;\n  vertical?: boolean;\n  double?: boolean;\n  from?: number;\n  to?: number;\n}\n\nclass DemoSlider {\n  private $parent: HTMLElement;\n\n  private currentValueInstance!: Input;\n\n  private $inputCurValueContainer!: HTMLElement;\n\n  private $inputCurValue!: HTMLInputElement;\n\n  private minValueInstance!: Input;\n\n  private $inputMinValueContainer!: HTMLElement;\n\n  private $inputMinValue!: HTMLInputElement;\n\n  private maxValueInstance!: Input;\n\n  private $inputMaxValueContainer!: HTMLElement;\n\n  private $inputMaxValue!: HTMLInputElement;\n\n  private noteValueInstance!: Checkbox;\n\n  private $inputShowValueContainer!: HTMLElement;\n\n  private $inputShowValue!: HTMLInputElement;\n\n  private stepInstance!: Input;\n\n  private $inputStepContainer!: HTMLElement;\n\n  private $inputStep!: HTMLInputElement;\n\n  private verticalInstance!: Checkbox;\n\n  private $inputVerticalContainer!: HTMLElement;\n\n  private $inputVertical!: HTMLInputElement;\n\n  private doubleInstance!: Checkbox;\n\n  private $inputDoubleContainer!: HTMLElement;\n\n  private $inputDouble!: HTMLInputElement;\n\n  private fromInstance!: Input;\n\n  private $inputFromContainer!: HTMLElement;\n\n  private $inputFrom!: HTMLInputElement;\n\n  private toInstance!: Input;\n\n  private $inputToContainer!: HTMLElement;\n\n  private $inputTo!: HTMLInputElement;\n\n  private initOptions!: Config;\n\n  private options!: Config;\n\n  private $adslider!: HTMLElement | null;\n\n  constructor(parent: HTMLElement) {\n    this.$parent = parent;\n    this.findContainers();\n    this.initElements();\n    this.findInputs();\n    this.setInitOptionsForSlider();\n    this.initPlugin();\n    this.getSliderOptions();\n    this.updatePanel();\n    this.addListeners();\n  }\n\n  private findContainers(): void {\n    this.$adslider = this.$parent.querySelector('.js-demo-slider__adslider');\n    this.$inputCurValueContainer = this.$parent.querySelector(\n      '.js-demo-slider__current-value',\n    ) as HTMLElement;\n    this.$inputMinValueContainer = this.$parent.querySelector(\n      '.js-demo-slider__minimum-value',\n    ) as HTMLElement;\n    this.$inputMaxValueContainer = this.$parent.querySelector(\n      '.js-demo-slider__maximum-value',\n    ) as HTMLElement;\n    this.$inputShowValueContainer = this.$parent.querySelector(\n      '.js-demo-slider__note-value',\n    ) as HTMLElement;\n    this.$inputStepContainer = this.$parent.querySelector(\n      '.js-demo-slider__step',\n    ) as HTMLElement;\n    this.$inputVerticalContainer = this.$parent.querySelector(\n      '.js-demo-slider__vertical-view',\n    ) as HTMLElement;\n    this.$inputDoubleContainer = this.$parent.querySelector(\n      '.js-demo-slider__double',\n    ) as HTMLElement;\n    this.$inputFromContainer = this.$parent.querySelector(\n      '.js-demo-slider__from',\n    ) as HTMLElement;\n    this.$inputToContainer = this.$parent.querySelector(\n      '.js-demo-slider__to',\n    ) as HTMLElement;\n  }\n\n  private initElements(): void {\n    this.currentValueInstance = new Input(this.$inputCurValueContainer);\n    this.minValueInstance = new Input(this.$inputMinValueContainer);\n    this.maxValueInstance = new Input(this.$inputMaxValueContainer);\n    this.noteValueInstance = new Checkbox(this.$inputShowValueContainer);\n    this.stepInstance = new Input(this.$inputStepContainer);\n    this.verticalInstance = new Checkbox(this.$inputVerticalContainer);\n    this.doubleInstance = new Checkbox(this.$inputDoubleContainer);\n    this.fromInstance = new Input(this.$inputFromContainer);\n    this.toInstance = new Input(this.$inputToContainer);\n  }\n\n  private findInputs(): void {\n    this.$inputCurValue = this.currentValueInstance.getInputElement();\n    this.$inputMinValue = this.minValueInstance.getInputElement();\n    this.$inputMaxValue = this.maxValueInstance.getInputElement();\n    this.$inputShowValue = this.noteValueInstance.getCheckboxElement();\n    this.$inputStep = this.stepInstance.getInputElement();\n    this.$inputVertical = this.verticalInstance.getCheckboxElement();\n    this.$inputDouble = this.doubleInstance.getCheckboxElement();\n    this.$inputFrom = this.fromInstance.getInputElement();\n    this.$inputTo = this.toInstance.getInputElement();\n  }\n\n  private setInitOptionsForSlider(): void {\n    this.initOptions = {\n      limits: {\n        min: this.minValueInstance.getValue(),\n        max: this.maxValueInstance.getValue(),\n      },\n      curValue: this.currentValueInstance.getValue(),\n      showValueNote: this.noteValueInstance.isChecked(),\n      step: this.stepInstance.getValue(),\n      vertical: this.verticalInstance.isChecked(),\n      double: this.doubleInstance.isChecked(),\n      from: this.fromInstance.getValue(),\n      to: this.toInstance.getValue(),\n    };\n  }\n\n  private initPlugin(): void {\n    $('.js-demo-slider__adslider', this.$parent).adslider(this.initOptions);\n  }\n\n  private getSliderOptions(): void {\n    this.options = $('.js-demo-slider__adslider', this.$parent).adslider(\n      'getOptions',\n    );\n  }\n\n  private updatePanel() {\n    const {\n      curValue,\n      limits: { min, max },\n      step,\n      from,\n      showValueNote,\n      vertical,\n      double,\n    } = this.options;\n    this.currentValueInstance.setValue(curValue);\n    this.minValueInstance.setValue(min);\n    this.maxValueInstance.setValue(max);\n    this.stepInstance.setValue(step);\n    if (showValueNote) {\n      this.noteValueInstance.setChecked();\n    }\n    if (vertical) {\n      this.verticalInstance.setChecked();\n    }\n    if (double) {\n      this.doubleInstance.setChecked();\n      if (from) {\n        this.fromInstance.setValue(from);\n      }\n      this.toInstance.setValue(curValue);\n    }\n    this.setInputsForDouble();\n  }\n\n  private addListeners(): void {\n    this.$inputCurValue.addEventListener(\n      'change',\n      this.handleInputChange.bind(this),\n    );\n    this.$inputMinValue.addEventListener(\n      'change',\n      this.handleInputChange.bind(this),\n    );\n    this.$inputMaxValue.addEventListener(\n      'change',\n      this.handleInputChange.bind(this),\n    );\n    this.$inputShowValue.addEventListener(\n      'change',\n      this.handleInputChange.bind(this),\n    );\n    this.$inputStep.addEventListener(\n      'change',\n      this.handleInputChange.bind(this),\n    );\n    this.$inputVertical.addEventListener(\n      'change',\n      this.handleInputChange.bind(this),\n    );\n    this.$inputDouble.addEventListener(\n      'change',\n      this.handleInputChange.bind(this),\n    );\n    this.$inputDouble.addEventListener(\n      'change',\n      this.updatePanel.bind(this),\n    );\n    this.$inputFrom.addEventListener(\n      'change',\n      this.handleInputChange.bind(this),\n    );\n    this.$inputTo.addEventListener('change', this.handleInputChange.bind(this));\n    if (this.$adslider) {\n      this.$adslider.addEventListener(\n        'mousemove',\n        this.updatePanel.bind(this),\n      );\n      this.$adslider.addEventListener(\n        'click',\n        this.updatePanel.bind(this),\n      );\n    }\n  }\n\n  private handleInputChange(): void {\n    this.options = {\n      curValue: this.currentValueInstance.getValue(),\n      limits: {\n        min: this.minValueInstance.getValue(),\n        max: this.maxValueInstance.getValue(),\n      },\n      step: this.stepInstance.getValue(),\n      showValueNote: this.noteValueInstance.isChecked(),\n      vertical: this.verticalInstance.isChecked(),\n      double: this.doubleInstance.isChecked(),\n      from: this.fromInstance.getValue(),\n      to: this.toInstance.getValue(),\n    };\n    $('.js-demo-slider__adslider', this.$parent).adslider(\n      'update',\n      this.options,\n    );\n  }\n\n  private setInputsForDouble(): void {\n    if (this.doubleInstance.isChecked()) {\n      this.currentValueInstance.hideInput();\n      this.fromInstance.showInput();\n      this.toInstance.showInput();\n    } else {\n      this.currentValueInstance.showInput();\n      this.fromInstance.hideInput();\n      this.toInstance.hideInput();\n    }\n  }\n}\n\nexport default DemoSlider;\n","class Input {\n  private $parent: HTMLElement;\n\n  private $inputElement!: HTMLInputElement;\n\n  constructor($parent: HTMLElement) {\n    this.$parent = $parent;\n    this.init();\n  }\n\n  private init(): void {\n    this.$inputElement = this.$parent.querySelector('.js-input__value') as HTMLInputElement;\n  }\n\n  public getInputElement(): HTMLInputElement {\n    return this.$inputElement;\n  }\n\n  public getValue(): number {\n    return +this.$inputElement.value;\n  }\n\n  public setValue(value: number): void {\n    this.$inputElement.value = String(value);\n  }\n\n  public hideInput(): void {\n    this.$inputElement.classList.add('input__value_hidden');\n  }\n\n  public showInput(): void {\n    this.$inputElement.classList.remove('input__value_hidden');\n  }\n}\n\nexport default Input;\n","class Checkbox {\n  private $parent: HTMLElement;\n\n  private $checkboxElement!: HTMLInputElement;\n\n  constructor($parent: HTMLElement) {\n    this.$parent = $parent;\n    this.init();\n  }\n\n  private init(): void {\n    this.$checkboxElement = this.$parent.querySelector('.js-checkbox__value') as HTMLInputElement;\n  }\n\n  public getCheckboxElement(): HTMLInputElement {\n    return this.$checkboxElement;\n  }\n\n  public isChecked(): boolean {\n    return this.$checkboxElement.checked;\n  }\n\n  public setChecked(): void {\n    this.$checkboxElement.checked = true;\n  }\n}\n\nexport default Checkbox;\n","import demoSlidersInit from '../../components/demo-slider/demo-slider-init';\n\ndemoSlidersInit();\n"],"names":["document","querySelectorAll","forEach","item","DemoSlider","$21bac7894ca695be$var$_DemoSlider","$jvJOj","parcelRequire","$c21b61457e01f5a6$var$_Input","$c21b61457e01f5a6$var$_Checkbox","parent","$c21b61457e01f5a6$var$_classCallCheck2","this","$c21b61457e01f5a6$var$_defineProperty2","$parent","findContainers","initElements","findInputs","setInitOptionsForSlider","initPlugin","getSliderOptions","updatePanel","addListeners","value","$adslider","querySelector","$inputCurValueContainer","$inputMinValueContainer","$inputMaxValueContainer","$inputShowValueContainer","$inputStepContainer","$inputVerticalContainer","$inputDoubleContainer","$inputFromContainer","$inputToContainer","currentValueInstance","Input","minValueInstance","maxValueInstance","noteValueInstance","Checkbox","stepInstance","verticalInstance","doubleInstance","fromInstance","toInstance","$inputCurValue","getInputElement","$inputMinValue","$inputMaxValue","$inputShowValue","getCheckboxElement","$inputStep","$inputVertical","$inputDouble","$inputFrom","$inputTo","initOptions","limits","min","getValue","max","curValue","showValueNote","isChecked","step","vertical","from","to","$","adslider","options","_this$options","_this$options$limits","double","setValue","setChecked","setInputsForDouble","addEventListener","handleInputChange","bind","hideInput","showInput","$a071acb8486d6f69$var$_classCallCheck2","$a071acb8486d6f69$var$_defineProperty2","init","$inputElement","String","classList","add","remove","$87a2543bdde1a0bc$var$_classCallCheck2","$87a2543bdde1a0bc$var$_defineProperty2","$checkboxElement","checked"],"version":3,"file":"demo-page.504e6cee.js.map"}