{"version":3,"sources":["demoPage/demoPage.ts","main.ts"],"names":[],"mappings":"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","file":"main.c39d6dcf.js","sourceRoot":"../src","sourcesContent":["import { Config } from '../model/model';\n\nexport default class DemoPage {\n  private selector: string;\n\n  private $container!: HTMLElement;\n\n  private $inputCurValue!: HTMLInputElement;\n\n  private $inputMinValue!: HTMLInputElement;\n\n  private $inputMaxValue!: HTMLInputElement;\n\n  private $inputShowValue!: HTMLInputElement;\n\n  private $inputStep!: HTMLInputElement;\n\n  private $inputVertical!: HTMLInputElement;\n\n  private $inputDouble!: HTMLInputElement;\n\n  private $inputFrom!: HTMLInputElement;\n\n  private $inputTo!: HTMLInputElement;\n\n  private $curValueOnSlider!: HTMLElement;\n\n  private options!: Config;\n\n  constructor(selector: string) {\n    this.selector = selector;\n    this.findInputs();\n    this.findOptions();\n    this.updatePanel();\n    this.addListeners();\n    this.updateInputFromTo();\n  }\n\n  private findInputs(): void {\n    this.$container = document.querySelector(this.selector) as HTMLElement;\n    if (this.$container) {\n      this.$inputCurValue = this.$container.querySelector('.panel__curValue') as HTMLInputElement;\n      this.$inputMinValue = this.$container.querySelector('.panel__minValue') as HTMLInputElement;\n      this.$inputMaxValue = this.$container.querySelector('.panel__maxValue') as HTMLInputElement;\n      this.$inputShowValue = this.$container.querySelector('.panel__showNoteValue') as HTMLInputElement;\n      this.$inputStep = this.$container.querySelector('.panel__step') as HTMLInputElement;\n      this.$inputVertical = this.$container.querySelector('.panel__verticalView') as HTMLInputElement;\n      this.$inputDouble = this.$container.querySelector('.panel__double') as HTMLInputElement;\n      this.$inputFrom = this.$container.querySelector('.panel__from') as HTMLInputElement;\n      this.$inputTo = this.$container.querySelector('.panel__to') as HTMLInputElement;\n      this.$curValueOnSlider = this.$container.querySelector('.adslider__value') as HTMLElement;\n    }\n  }\n\n  private findOptions(): void {\n    this.options = $(this.selector).adslider('getOptions');\n  }\n\n  private updatePanel() {\n    if (this.$inputCurValue) {\n      this.$inputCurValue.value = String(this.options.curValue);\n    }\n    if (this.$inputMinValue) {\n      this.$inputMinValue.value = String(this.options.limits.min);\n    }\n    if (this.$inputMaxValue) {\n      this.$inputMaxValue.value = String(this.options.limits.max);\n    }\n    if (this.$inputStep) {\n      this.$inputStep.value = String(this.options.step);\n    }\n    if (this.options.showValueNote) {\n      if (this.$inputShowValue) {\n        this.$inputShowValue.setAttribute('checked', 'checked');\n      }\n    }\n    if (this.options.vertical) {\n      if (this.$inputVertical) {\n        this.$inputVertical.setAttribute('checked', 'checked');\n      }\n    }\n    if (this.options.double) {\n      if (this.$inputDouble) {\n        this.$inputDouble.setAttribute('checked', 'checked');\n        if (this.$inputFrom && this.$inputTo) {\n          this.$inputFrom.value = String(this.options.from);\n          this.$inputTo.value = String(this.options.to);\n        }\n      }\n    }\n  }\n\n  private updateSlider(): void {\n    this.options.curValue = Number(this.$inputCurValue.value);\n    this.options.limits.min = Number(this.$inputMinValue.value);\n    this.options.limits.max = Number(this.$inputMaxValue.value);\n    this.options.step = Number(this.$inputStep.value);\n    if (this.$inputShowValue.checked) {\n      this.options.showValueNote = true;\n    } else {\n      this.options.showValueNote = false;\n    }\n    if (this.$inputVertical.checked) {\n      this.options.vertical = true;\n    } else {\n      this.options.vertical = false;\n    }\n    if (this.$inputDouble.checked) {\n      this.options.double = true;\n    } else {\n      this.options.double = false;\n    }\n    this.options.from = Number(this.$inputFrom.value);\n    this.options.to = Number(this.$inputTo.value);\n    $(this.selector).adslider('update', this.options);\n  }\n\n  private addListeners(): void {\n    this.$inputCurValue.addEventListener('change', this.updateSlider.bind(this));\n    this.$inputMinValue.addEventListener('change', this.updateSlider.bind(this));\n    this.$inputMaxValue.addEventListener('change', this.updateSlider.bind(this));\n    this.$inputShowValue.addEventListener('change', this.updateSlider.bind(this));\n    this.$inputStep.addEventListener('change', this.updateSlider.bind(this));\n    this.$inputVertical.addEventListener('change', this.updateSlider.bind(this));\n    this.$inputDouble.addEventListener('change', this.updateSlider.bind(this));\n    this.$inputFrom.addEventListener('change', this.updateSlider.bind(this));\n    this.$inputTo.addEventListener('change', this.updateSlider.bind(this));\n    this.$curValueOnSlider.addEventListener('DOMSubtreeModified', this.updateCurInput.bind(this));\n    this.$inputDouble.addEventListener('change', this.updateInputFromTo.bind(this));\n  }\n\n  private updateCurInput(): void {\n    this.$inputCurValue.value = this.$curValueOnSlider.textContent as string;\n  }\n\n  private updateInputFromTo(): void {\n    if (this.$inputDouble.checked) {\n      const $noteFrom = this.$container.querySelector('.adslider__note_from') as HTMLElement;\n      const $valueFrom = $noteFrom.querySelector('.adslider__value') as HTMLElement;\n      const $noteTo = this.$container.querySelector('.adslider__note') as HTMLElement;\n      const $valueTo = $noteTo.querySelector('.adslider__value') as HTMLElement;\n      this.updateFromInput($valueFrom);\n      this.updateToInput($valueTo);\n      this.$inputCurValue.style.visibility = 'hidden';\n      this.$inputFrom.style.visibility = 'visible';\n      this.$inputTo.style.visibility = 'visible';\n      $valueFrom.addEventListener('DOMSubtreeModified', this.updateFromInput.bind(this, $valueFrom));\n      $valueTo.addEventListener('DOMSubtreeModified', this.updateToInput.bind(this, $valueTo));\n    } else {\n      this.$inputCurValue.style.visibility = 'visible';\n      this.$inputFrom.style.visibility = 'hidden';\n      this.$inputTo.style.visibility = 'hidden';\n    }\n  }\n\n  private updateFromInput($valueFrom: HTMLElement): void {\n    this.$inputFrom.value = $valueFrom.textContent as string;\n  }\n\n  private updateToInput($valueTo: HTMLElement): void {\n    this.$inputTo.value = $valueTo.textContent as string;\n  }\n}\n","import DemoPage from './demoPage/demoPage';\n\nconst options1 = {\n  limits: { min: 0, max: 100 },\n  curValue: 12,\n  showValueNote: true,\n  step: 30,\n  // double: true,\n  // from: 2000,\n  // to: 3000,\n  // vertical: true,\n};\nconst options2 = {\n  limits: { min: 0, max: 100 },\n  curValue: 85,\n  showValueNote: true,\n  step: 20,\n  double: true,\n  from: 40,\n  to: 90,\n  // vertical: true,\n};\nconst options3 = {\n  limits: { min: 0, max: 1000 },\n  curValue: 500,\n  showValueNote: true,\n  step: 100,\n  // double: true,\n  // from: 40,\n  // to: 90,\n  vertical: true,\n};\nconst options4 = {\n  limits: { min: 0, max: 100 },\n  curValue: 85,\n  showValueNote: true,\n  step: 15,\n  double: true,\n  from: 40,\n  to: 90,\n  vertical: true,\n};\n\n$('.js-container1').adslider(options1);\n$('.js-container2').adslider(options2);\n$('.js-container3').adslider(options3);\n$('.js-container4').adslider(options4);\n\n/* eslint-disable no-new */\nnew DemoPage('.js-container1');\nnew DemoPage('.js-container2');\nnew DemoPage('.js-container3');\nnew DemoPage('.js-container4');\n"]}