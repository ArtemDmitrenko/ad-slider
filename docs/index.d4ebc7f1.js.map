{"mappings":"2mBACAA,KAAAC,EAAA,4MAEMC,IA+DSA,EA/DTA,oBAKJA,EAAYC,EAAwBC,gGAAiBC,CAAAC,KAAAJ,QAC9CK,MAAQ,IAAIC,EAAAA,MAAMJ,QAClBK,KAAO,IAAIC,EAAAA,QAAKP,QAChBQ,kBACAC,0DAGmBC,MAAA,gBACnBJ,KAAKE,WAAVL,KAA0BC,MAAMH,cAC3BU,wCAGsBD,MAAA,gBAEtBJ,KAAKM,YAAV,cAAAT,KAA0CC,MAAMS,uBAAuBC,KAAlCX,KAA4CC,aAG5EA,MAAMQ,YAAX,iBAAAT,KAA8CG,KAAKS,YAAYC,QAAQF,KAA9BX,KAAwCG,KAAKS,mBACjFX,MAAMQ,YAAX,gBAAAT,KAA6CG,KAAKS,YAAYE,OAAOH,KAA7BX,KAAuCG,KAAKS,cACpFZ,KAASG,KAAKY,uBACPd,MAAMQ,YAAX,0BAAAT,KAAuDG,KAAKY,gBAAgBF,QAAQF,KAAlCX,KAA4CG,KAAKY,uBAC9Fd,MAAMQ,YAAX,yBAAAT,KAAsDG,KAAKY,gBAAgBD,OAAOH,KAAjCX,KAA2CG,KAAKY,wBAI9Fd,MAAMQ,YAAX,mBAAAT,KAAgDG,KAAKa,cAAcH,QAAQF,KAAhCX,KAA0CG,KAAKa,qBACrFf,MAAMQ,YAAX,kBAAAT,KAA+CG,KAAKa,cAAcF,OAAOH,KAA/BX,KAAyCG,KAAKa,qBACnFf,MAAMQ,YAAX,aAAAT,KAA0CG,KAAKc,iBAAiBN,KAA3BX,KAAqCG,OAC1EH,KAASG,KAAKe,yBACPjB,MAAMQ,YAAX,4BAAAT,KAAyDG,KAAKe,kBAAkBL,QAAQF,KAApCX,KAA8CG,KAAKe,yBAClGjB,MAAMQ,YAAX,2BAAAT,KAAwDG,KAAKe,kBAAkBJ,OAAOH,KAAnCX,KAA6CG,KAAKe,0BAIlGjB,MAAMQ,YAAX,iBAAAT,KAA8CG,KAAKa,cAAcG,SAASR,KAAjCX,KAA2CG,KAAKa,gBACzFhB,KAASG,KAAKe,mBAAdlB,KACOC,MAAMQ,YAAX,0BAAAT,KAAuDG,KAAKe,kBAAkBC,SAASR,KAArCX,KAA+CG,KAAKe,yBAInGjB,MAAMQ,YAAX,cAAAT,KAA2CG,KAAKiB,QAAQC,UAAUV,KAA5BX,KAAsCG,KAAKiB,UACjFpB,KAASG,KAAKe,mBAAdlB,KACOC,MAAMQ,YAAX,uBAAAT,KAAoDG,KAAKiB,QAAQE,mBAAmBX,KAArCX,KAA+CG,KAAKiB,mCAIvEb,MAAA,WAC9BP,KAASG,KAAKY,iBAAVf,KAAkCG,KAAKe,yBACpCjB,MAAMQ,YAAX,0BAAAT,KAAuDG,KAAKY,gBAAgBF,QAAQF,KAAlCX,KAA4CG,KAAKY,uBAC9Fd,MAAMQ,YAAX,yBAAAT,KAAsDG,KAAKY,gBAAgBD,OAAOH,KAAjCX,KAA2CG,KAAKY,uBAC5Fd,MAAMQ,YAAX,4BAAAT,KAAyDG,KAAKe,kBAAkBL,QAAQF,KAApCX,KAA8CG,KAAKe,yBAClGjB,MAAMQ,YAAX,2BAAAT,KAAwDG,KAAKe,kBAAkBJ,OAAOH,KAAnCX,KAA6CG,KAAKe,yBAChGjB,MAAMQ,YAAX,0BAAAT,KAAuDG,KAAKe,kBAAkBC,SAASR,KAArCX,KAA+CG,KAAKe,yBACjGjB,MAAMQ,YAAX,uBAAAT,KAAoDG,KAAKiB,QAAQE,mBAAmBX,KAArCX,KAA+CG,KAAKiB,6CA1DnGxB,iSCHN,0jCAgBMM,IAAAA,EAAAA,SAAAA,sQAsBJA,EAAYJ,GAAiB,IAAAyB,qGAAAC,CAAAxB,KAAAE,IAC3BqB,EAAAE,EAAAC,KAAA1B,OACK2B,OAAS7B,EAAQ6B,OACtBJ,EAAKK,cAAgB9B,EAAQ8B,cAC7BL,EAAKM,KAAO/B,EAAQ+B,KACpBN,EAAKO,SAAWhC,EAAQgC,SACxBP,EAAA,OAAczB,EAAO,OACrByB,EAAKQ,KAAOjC,EAAQiC,KACpBR,EAAKS,GAAKlC,EAAQkC,GAClBT,EAAKU,SAAWnC,EAAQkC,IAAMlC,EAAQmC,SACtCV,EAAKzB,QAAL,CACE6B,OAAQJ,EAAKI,OACbM,SAAUV,EAAKU,SACfL,cAAeL,EAAKK,cACpBC,KAAMN,EAAKM,KACXC,SAAUP,EAAKO,gBACPP,EAAA,OACRQ,KAAMR,EAAKQ,KACXC,GAAIT,EAAKS,IAEXT,EAAKW,KAAKX,EAAKzB,SApBYyB,6BAuBjBzB,MAAAA,SAAAA,QACLqC,UAAUrC,EAAQ6B,aAClBS,QAAQtC,EAAQ+B,WAChBQ,WAAWvC,EAAQkC,SACnBM,aAAaxC,EAAQiC,WACrBQ,YAAYzC,EAAQmC,eACpBO,UAAU1C,EAAO,OAASA,EAAQiC,yBAGvBU,MAAAA,SAAAA,EAAiBV,GAC7BU,IAAWV,IAAf/B,KACO+B,KAAL/B,KAAiB2B,OAAOe,UAE1B,OAAcD,OACT3C,QAAL,OAAsB2C,qBAGNd,MAAAA,SAAAA,GAChB,GAAIA,EAAOe,KAAOf,EAAOgB,IACvB,MAAM,IAAIC,MAAJ,iDAEHjB,OAAL,CAAgBe,IAAKf,EAAOe,IAAKC,IAAKhB,EAAOgB,UACxC7C,QAAQ6B,OAAb,CAAwBe,IAAKf,EAAOe,IAAKC,IAAKhB,EAAOgB,0BAGnCpC,MAAAA,SAAAA,GAClB,GAAIA,EAAKP,KAAQ2B,OAAOe,KAAOnC,EAAKP,KAAQ2B,OAAOgB,IACjD,MAAM,IAAIC,MAAJ,gDAER,GAAA5C,KAAS6B,KAAM,CACb,IAAMgB,EAAc7C,KAAQ8C,iBAC1BvC,EADqBP,KAEhB6B,KAFgB7B,KAGhB2B,OAAOgB,IAHS3C,KAIhB2B,OAAOe,UAETT,SAALjC,KAAqBgC,IAAMa,OACtB/C,QAAQmC,SAAbjC,KAA6BgC,IAAMa,6BAMrCtC,MAAAA,SAAAA,EACAsB,EACAc,EACAD,GAGA,GAAY,IADSA,EAAMnC,GAASsB,EACpC,OACStB,EAET,IAAMwC,EAAwBC,KAAKC,OAAOP,EAAMnC,GAASsB,GACrDqB,EAAsBrB,EAAOmB,KAAKG,IAAIJ,GAAiBL,SACvDQ,EAAcP,IAChBO,GAAerB,GAEVqB,sBAGU3C,MAAAA,SAAAA,GACjB,GAAIA,EAAKP,KAAQ2B,OAAOe,KAAOnC,EAAKP,KAAQ2B,OAAOgB,IACjD,MAAM,IAAIC,MAAJ,gDAER,GAAA5C,KAAS6B,MAAQtB,EAAO,CACtB,IAAMsC,EAAc7C,KAAQ8C,iBAC1BvC,EADqBP,KAEhB6B,KAFgB7B,KAGhB2B,OAAOgB,IAHS3C,KAIhB2B,OAAOe,UAETV,GAAKa,OACL/C,QAAQkC,GAAKa,yBAIDtC,MAAAA,SAAAA,GACnB,GAAIA,EAAKP,KAAQ2B,OAAOe,KAAOnC,EAAKP,KAAQ2B,OAAOgB,IACjD,MAAM,IAAIC,MAAJ,gDAER,GAAIrC,EAAKP,KAAQgC,IAAbhC,KAAwBgC,GAC1B,MAAM,IAAIY,MAAJ,mCAER,GAAA5C,KAAS6B,MAAQtB,EAAO,CACtB,IAAMsC,EAAM7C,KAAQ8C,iBAClBvC,EADaP,KAER6B,KAFQ7B,KAGR2B,OAAOgB,IAHC3C,KAIR2B,OAAOe,UAETX,KAAOc,OACP/C,QAAQiC,KAAOc,oBAIRtC,MAAAA,SAAAA,GACd,GAAIA,EAAKP,KAAQ2B,OAAOgB,IAAZ3C,KAAuB2B,OAAOe,IACxC,MAAM,IAAIE,MAAJ,yDAEHf,KAAOtB,GAAS,OAChBT,QAAQ+B,KAAOtB,GAAS,kCAI7BA,MAAAA,SAAAA,EACA6C,EACAC,QAEKtB,KAAL/B,KAAiBsD,kBAAkB/C,GACnC,IAAMT,EAAO,CAAKsD,KAAAA,EAAM7C,MAAKP,KAAO+B,KAAMJ,OAAM3B,KAAO2B,aAClD4B,UAAL,0BAA0CzD,QACrCyD,UAAL,+BACKA,UAAL,4BAA4CF,QACvCE,UAAL,iCACKA,UAAL,0BAAAvD,KAA+C+B,qCAI/CxB,MAAAA,SAAAA,EACA6C,EACAC,QAEKpB,SAALjC,KAAqBsD,kBAAkB/C,GACvC,IAAMT,EAAO,CAAKsD,KAAAA,EAAM7C,MAAKP,KAAOiC,SAAUN,OAAM3B,KAAO2B,aACtD4B,UAAL,iBAAiCzD,QAC5ByD,UAAL,sBACKA,UAAL,mBAAmCF,QAC9BE,UAAL,wBACKA,UAAL,iBAAAvD,KAAsCiC,mCAGhBmB,MAAAA,SAAAA,EAAcC,GACpC,GAAArD,KAAI,OAAa,CACf,IAAMwD,EAAa,CACjBJ,KAAAA,EACAK,UAASzD,KAAO+B,KAChB2B,QAAO1D,KAAOiC,SACdN,OAAM3B,KAAO2B,OACb0B,QAAAA,QAEGE,UAAL,uBAAuCC,QAClCD,UAAL,aAA6BC,QAT/BxD,KAWOuD,UAAL,cAA8BF,mCAIJM,MAAAA,SAAAA,GAK5B,IAAMpD,EAAKP,KAAQ4D,wBAAwBD,EAAKE,OAAQF,EAAKP,MAC7D,GAAIO,EAAKN,QAAQS,UAAUC,SAAvB,0BAA2D,CAC7D,GAAA/D,KAASgE,wBAAwBzD,GAA7B,YAGC0D,uBAAuB1D,EAAOoD,EAAKP,KAAMO,EAAKN,aAC9C,CACL,GAAArD,KAAI,QAAAA,KAAoBkE,wBAAwB3D,GAA7B,YAGd4D,sBAAsB5D,EAAOoD,EAAKP,KAAMO,EAAKN,cAE/Ce,gBAAgBT,EAAKP,KAAMO,EAAKN,0CAGP9C,MAAAA,SAAAA,UACvBA,EAAKP,KAAQiC,0CAGU1B,MAAAA,SAAAA,UACvBA,EAAKP,KAAQ+B,sCAGS8B,MAAAA,SAAAA,EAAgBT,GAC7C,IAAMiB,EAAYrE,KAAQ2B,OAAOgB,IAAZ3C,KAAuB2B,OAAOe,WAC5CM,KAAKC,MAALjD,KAAgB2B,OAAOe,IAAM2B,GAAQR,EAAST,+BAG7B7C,MAAAA,SAAAA,GACxB,IAAM+D,EAA2BtB,KAAKuB,MACpCvB,KAAKG,IAALnD,KAAc2B,OAAOgB,IAAZ3C,KAAuB2B,OAAOe,KAAvC1C,KAAmD6B,MAE/C2C,EAAoBxE,KAAQ2B,OAAOe,IAAM4B,EAAgBtE,KAAQ6B,KACjEkB,EAAwBC,KAAKC,OAChC1C,EAAKP,KAAQ2B,OAAOe,KAArB1C,KAAiC6B,MAE/B4C,EAAgBzE,KAAQ2B,OAAOe,IAAZ1C,KAAuB6B,KAAOkB,SACjD0B,EAAQzE,KAAQ2B,OAAOe,MACzB+B,GAAQzE,KAAS6B,MAEf4C,EAAQzE,KAAQ2B,OAAOgB,MACzB8B,GAAQzE,KAAS6B,MAEftB,EAAQiE,IAERC,EADElE,EAAQiE,GAAYxE,KAAS2B,OAAOgB,IAAM6B,GAAgB,EACpDxE,KAAQ2B,OAAOgB,IAEZ6B,GAGRC,oCAvPLvE,KAhBNP,EAAA,uCAgBoB+E,wTChBdA,IAgCSA,EAhCTA,oBAIJA,iGAAcC,CAAA3E,KAAA0E,QACPE,UAAL,+CAIiBC,MAAAA,SAAAA,EAAeC,GAChC,GAAA9E,KAAS4E,UAAUC,GAAQ,CACzB,GAAA7E,KAAS4E,UAAUC,GAAOE,SAASD,GACjC,MAAM,IAAIlC,MAAJ,yCAEHgC,UAAUC,GAAOG,KAAKF,aAEtBF,UAAUC,GAAf,QACKD,UAAUC,GAAOG,KAAKF,sBAIdD,MAAAA,SAAAA,EAAelB,GAC9B,QAA8BsB,IAA9BjF,KAAS4E,UAAUC,GACjB,MAAM,IAAIjC,MAAJ,0CAEY5C,KAAQ4E,UAAUC,GAAOK,MAAM,GACpCC,SAAf,SAAwBC,GACtBA,EAAWzB,wCA3BXe,mXCAN,IAAAW,EAAAC,EAAA3F,EAAA,UACA4F,EAAAD,EAAA3F,EAAA,UACA6F,EAAAF,EAAA3F,EAAA,UACA8F,EAAAH,EAAA3F,EAAA,UACA+F,EAAAJ,EAAA3F,EAAA,iiCAGMS,IAqYSA,EArYTA,SAAAA,sQAyBJA,EAAYP,GAAwB,IAAA0B,qGAAAoE,CAAA3F,KAAAI,IAClCmB,EAAAE,EAAAC,KAAA1B,OACK4F,OAAO/F,GACZ0B,EAAKjB,eAH6BiB,+BAMrB1B,MAAAA,SAAAA,QACRgG,IAAMhG,OACNiG,UAAYC,SAASC,cAAT,YACZF,UAAUhC,UAAUmC,IAAzB,iBACKJ,IAAIK,OAATlG,KAAqB8F,gBAEhBK,UAAY,IAAIC,EAAAA,QAAAA,KAAeN,gBAC/B1E,QAAU,IAAIiF,EAAAA,QAAAA,KAAaP,gBAC3BQ,UAAY,IAAIC,EAAAA,QAAAA,KAAeT,gBAC/BlF,YAAc,IAAI4F,EAAAA,QAAAA,KAAiBL,UAAUM,aAC7CzF,cAAgB,IAAI0F,EAAAA,QAAAA,KAAmBZ,gBAEvC/E,gBAAkB,IAAIyF,EAAAA,QAAAA,KAAiBL,UAAUM,aACjD1F,gBAAgB4F,SAAS7C,UAAUmC,IAAxC,+BACK/E,kBAAoB,IAAIwF,EAAAA,QAAAA,KAAmBZ,gBAC3C5E,kBAAkB0F,MAAM9C,UAAUmC,IAAvC,4BACKjF,cAAc4F,MAAM9C,UAAUmC,IAAnC,yCAGgBnG,MAAAA,SAAAA,QAUX+G,yBAAyB/G,EAAQgC,eACjClB,YAAYC,QAAjB,CACEuC,KAAIpD,KAAO8G,QAAL9G,KAAkBY,aACxBL,MAAOT,EAAQmC,SACfN,OAAQ7B,EAAQ6B,cAEbf,YAAYE,cACZE,cAAcH,QAAnBb,KAAgCY,YAAY+F,eACvC3F,cAAcF,cACdE,cAAcG,SAASrB,EAAQmC,eAC/BjB,cAAcY,cAAc9B,EAAQ8B,oBACpC0E,UAAUS,UAAUjH,EAAzBE,KAAuCY,YAAY+F,UAC/C7G,EAAO,OAAAE,KACJgH,oBACHlH,EAAQgC,SACRhC,EAAQiC,KACRjC,EAAQkC,GACRlC,EAAQmC,SACRnC,EAAQ6B,OACR7B,EAAQ8B,gBAGV5B,KAASe,iBAATf,KACOiH,yBAEF7F,QAAQC,UAAbrB,KAA4BY,YAAY+F,sCAIVpG,MAAA,WAChCP,KAASe,iBAALf,KAA6BkB,yBAC1BH,gBAAgB4F,SAASO,cACzBhG,kBAAkB0F,MAAMM,qBACjBnG,4BACAG,gDAKdY,MAAAA,SAAAA,EACAC,EACAC,EACAC,EACAN,EACAC,GAEA5B,KAAUe,iBAAVf,KACOmH,yBAEFC,yBAAyBtF,GAC9B9B,KAASe,iBAALf,KAA6BkB,yBAC1BH,gBAAgBF,QAArB,CACEuC,KAAIpD,KAAO8G,QAAL9G,KAAkBe,iBACxBR,MAAOwB,EACPJ,OAAAA,SAEGZ,gBAAgBD,cAChBI,kBAAkBL,QAAvBb,KAAoCe,gBAAgB4F,eAC/CzF,kBAAkBJ,cAClBI,kBAAkBC,SAASY,QAC3Bb,kBAAkBU,cAAcA,QAChCR,QAAQE,mBAAb,CACE8B,KAAIpD,KAAO8G,QAAL9G,KAAkBe,iBACxB0C,UAAW1B,EACX2B,QAASzB,EACTN,OAAAA,EACA0B,QAAOrD,KAAOY,YAAY+F,YAG9B,IAAMhD,EAAI,CAAKF,UAAW1B,EAAM2B,QAAS1B,QACpCf,iBAAiB0C,8BAGUpD,MAAA,gBAC3BQ,gBAAkB,IAAIyF,EAAAA,QAAAA,KAAiBL,UAAUM,aACjD1F,gBAAgB4F,SAAS7C,UAAUmC,IAAxC,+BACK/E,kBAAoB,IAAIwF,EAAAA,QAAAA,KAAmBZ,gBAC3C5E,kBAAkB0F,MAAM9C,UAAUmC,IAAvC,4BACKlF,gBAAgBN,YAArB,wBAAAT,KAEOqH,YAAY1G,KAAjBX,YAEGe,gBAAgBN,YAArB,wBAAAT,KAEOsH,UAAU3G,KAAfX,iCAIqBuH,MAAAA,SAAAA,GACvB,GAAAvH,KAASwH,WACPxH,KACOY,YAAY+F,SAAS7C,UAAUC,SAApC,gCAAA/D,KAIKyH,oCAAoCF,QAEpCG,kCAAkCH,OAEpC,CACL,IAAM5D,EAAI,CACRgE,MAAK3H,KAAOY,YAAYgH,YAAc,EACtCL,EAAAA,EACAlE,QAAOrD,KAAOY,kBAEX0G,UAAU3D,+CAIuB4D,MAAAA,SAAAA,GACxC,GAAAvH,KAASe,gBAAiB,CACxB,IAAM8G,EAAc7H,KAAQe,gBAAgB4F,SAASmB,wBAAwBC,IAGvEC,GAFYhI,KAAQY,YAAY+F,SAASmB,wBAAwBC,IAC9BF,GACX,EAAIA,EAAhB7H,KAAsCY,YAAYgH,YAAc,EAClF,GAAIL,EAAEU,SAAWD,EAAW,CAC1B,IAAMrE,EAAI,CACRgE,MAAK3H,KAAOe,gBAAgB6G,YAAc,EAC1CL,EAAAA,EACAlE,QAAOrD,KAAOe,sBAEXuG,UAAU3D,OACV,CACL,IAAMA,EAAI,CACRgE,MAAK3H,KAAOY,YAAYgH,YAAc,EACtCL,EAAAA,EACAlE,QAAOrD,KAAOY,kBAEX0G,UAAU3D,kDAKuB4D,MAAAA,SAAAA,GAC1C,GAAAvH,KAASe,gBAAiB,CACxB,IAAM8G,EAAc7H,KAAQe,gBAAgB4F,SAASmB,wBAAwBI,KAGvEF,GAFYhI,KAAQY,YAAY+F,SAASmB,wBAAwBI,KAC9BL,GACX,EAAIA,EAAhB7H,KAAsCY,YAAYgH,YAAc,EAClF,GAAIL,EAAEY,SAAWH,EAAW,CAC1B,IAAMrE,EAAI,CACRgE,MAAK3H,KAAOe,gBAAgB6G,YAAc,EAC1CL,EAAAA,EACAlE,QAAOrD,KAAOe,sBAEXuG,UAAU3D,OACV,CACL,IAAMA,EAAI,CACRgE,MAAK3H,KAAOY,YAAYgH,YAAc,EACtCL,EAAAA,EACAlE,QAAOrD,KAAOY,kBAEX0G,UAAU3D,uCAKY7B,MAAAA,SAAAA,GAC3BA,QACGgE,UAAUhC,UAAUoD,OAAzB,4BACKpB,UAAUhC,UAAUmC,IAAzB,4BAEKH,UAAUhC,UAAUoD,OAAzB,0BACKpB,UAAUhC,UAAUmC,IAAzB,6BAEGE,UAAUiC,gBAAgBtG,QAC1BlB,YAAYwH,gBAAgBtG,QAC5Bd,cAAcoH,gBAAgBtG,QAC9BV,QAAQgH,gBAAgBtG,qCAGEA,MAAAA,SAAAA,GAC/B9B,KAASe,iBAALf,KAA6BkB,yBAC1BH,gBAAgBqH,gBAAgBtG,QAChCZ,kBAAkBkH,gBAAgBtG,yBAIvB6B,MAAAA,SAAAA,QACb0E,UAAU1E,EAAKkB,MAAOlB,EAAKN,4BAGhBM,MAAAA,SAAAA,GAKhB,IAAIE,EAEFA,EADE,cAAAF,EAAK4D,EAAEe,KACHtI,KAAQuI,WAAW5E,EAAKgE,MAAOhE,EAAK4D,GAEpCvH,KAAQuI,WAALvI,KAAqBwI,aAAc7E,EAAK4D,GAEnD,IAAMnE,EAAYpD,KAAQ8G,QAAQnD,EAAKN,SAEjCvD,EAAO,CAAK+D,OADlBA,EAAM7D,KAAQyI,YAAY5E,GACAT,KAAAA,EAAMC,QAASM,EAAKN,QAAQsD,eACjDpD,UAAL,cAA8BzD,oBAGhBuD,MAAAA,SAAAA,eACF8C,UAAUyB,YAAcvE,EAAQuE,iCAG1B/D,MAAAA,SAAAA,GAClB,IAAMT,EAAIpD,KAAQ8G,QAAL9G,KAAkBY,aAC3B8H,EAAa7E,SACbA,EAAS,EACX6E,EAAa,EACJ7E,EAAST,IAClBsF,EAAatF,GAERsF,qBAGSnB,MAAAA,SAAAA,EAAelE,GAC/B,IAAMsE,EAAK3H,KAAQ2I,aACfpB,EAAEU,QAAU5E,EAAQyE,wBAAwBc,OAC5CrB,EAAEY,QAAU9E,EAAQyE,wBAAwBI,UAC3CM,aAAexF,KAAKG,IAAIwE,uBAGDpH,MAAA,uBAChBuF,UAAUhC,UAAUC,SAAzB,uCAGmBxD,MAAA,WAC1B,QAAAP,KAASe,oCAMQ4G,MAAAA,SAAAA,EAAeJ,eACpBoB,aAAL3I,KACEmG,UAAUM,OAAOqB,wBAAwBc,OAASrB,EAAEU,QAAUN,EACnEJ,EAAEY,QAAUR,EAAZ3H,KAAyBmG,UAAUM,OAAOqB,wBAAwBI,+BAGhDpI,MAAAA,SAAAA,GAItBE,KAAS6I,8BAAL7I,KACG8I,mBAAmBhJ,EAAQ2D,UAAW3D,EAAQ4D,SAC9C1D,KAAS+I,qBAAT/I,KACAgJ,iEAIsCzI,MAAA,WAC7C,QAAAP,KAASkB,mBACqBlB,KAAQgB,cAAciI,SAAnBjJ,KAAmCkB,kBAAkB+H,SAClEjJ,KAAQgB,cAAckI,sCAQjBzF,MAAAA,SAAAA,EAAmBC,GAC5C1D,KAASkB,mBAATlB,KACOkB,kBAAkBU,eAAc,QAElCZ,cAAcY,eAAc,GACjC5B,KAAS+I,2BAGFA,oBAAsB,IAAIrC,EAAAA,QAAAA,KAAmBZ,gBAC7CiD,oBAAoBnC,MAAM9C,UAAUmC,IAAzC,8BACK8C,oBAAoBX,gBAAzBpI,KAA8C2I,eALhD3I,KACOmJ,qBAAqB1F,EAAWC,iCASZD,MAAAA,SAAAA,EAAmBC,GAC9C,GAAA1D,KAASe,iBAALf,KAA6B+I,oBAAqB,MAC/CA,oBAAoBK,eAAe3F,EAAWC,GACnD,IAAM2F,EAAqBrJ,KAAQe,gBAAgBkI,SAE7CK,EADoBtJ,KAAQY,YAAYqI,SAAjBjJ,KAAiCY,YAAYgH,YAClByB,OACnDN,oBAAoBQ,aAAeF,EAAwBC,EAA2B,OACtFP,oBAAoBjI,6CAIaP,MAAA,WACxCP,KAASkB,mBAALlB,KAA+B+I,2BAC5B/H,cAAcY,eAAc,QAC5BV,kBAAkBU,eAAc,QAChCmH,oBAAoBnC,MAAMM,qBACnB6B,2CAIaxI,MAAA,gBACtBK,YAAYH,YAAjB,wBAAAT,KAEOqH,YAAY1G,KAAjBX,OAEFA,KAASe,uBACFA,gBAAgBN,YAArB,wBAAAT,KAEOqH,YAAY1G,KAAjBX,YAEGe,gBAAgBN,YAArB,wBAAAT,KAEOsH,UAAU3G,KAAfX,aAGCY,YAAYH,YAAjB,wBAAAT,KAEOsH,UAAU3G,KAAfX,YAEGmG,UAAU1F,YAAf,wBAAAT,KAEOwJ,iBAAiB7I,KAAtBX,YAEGoB,QAAQX,YAAb,wBAAAT,KAEOwJ,iBAAiB7I,KAAtBX,YAEGsG,UAAU7F,YAAf,wBAAAT,KAEOwJ,iBAAiB7I,KAAtBX,yCAhYAI,CAFNkF,EAAA3F,EAAA,UAEmB+E,uSCPnB,4jCAEM8B,IAkGSA,EAlGTA,SAAAA,sQAWJA,EAAYiD,GAAsB,IAAAlI,qGAAAmI,CAAA1J,KAAAwG,IAChCjF,EAAAE,EAAAC,KAAA1B,OACK4F,OAAO6D,GAFoBlI,+BAKnBkI,MAAAA,SAAAA,QACRA,QAAUA,OACV9C,SAAWZ,SAASC,cAAT,YACXW,SAAS7C,UAAUmC,IAAxB,0BACKwD,QAAQvD,OAAblG,KAAyB2G,eACpBA,SAASgD,iBAAd,YAAA3J,KAAiD4J,uBAAuBjJ,KAA5BX,uCAGf6E,MAAAA,SAAAA,GAC7BA,EAAMgF,iBACNhF,EAAMiF,kBACN,IAAMnG,EAAI,CAAKkB,MAAAA,EAAOxB,QAAOrD,KAAO2G,eAC/BpD,UAAL,wBAAwCI,QACnCoG,cAAclF,0BAGCA,MAAAA,SAAAA,QACfmF,gBAALhK,KAA4BsH,UAAU3G,KAAfX,WAClBiK,cAALjK,KAA0BkK,QAAQvJ,KAAbX,MACjB,cAAA6E,EAAMyD,OACRvC,SAAS4D,iBAAT,YAAA3J,KAA4CgK,iBAC5CjE,SAAS4D,iBAAT,UAAA3J,KAA0CiK,mCAI5B1C,MAAAA,SAAAA,GAChB,IAAM5D,EAAI,CAAKgE,MAAO,KAAMJ,EAAAA,EAAGlE,QAAOrD,WACjCuD,UAAL,wBAAwCI,oBAGlBpD,MAAA,WACtBwF,SAASoE,oBAAT,UAAAnK,KAA6CiK,eAC7ClE,SAASoE,oBAAT,YAAAnK,KAA+CgK,oCAGtBzJ,MAAA,uBACboI,aACRyB,SAASC,iBAAgBrK,KAAM2G,UAAU2D,OAAQ,IACjDF,SAASC,iBAAgBrK,KAAM2G,UAAU4D,MAAO,oBAG9BhK,MAAA,uBACVoI,aACRyB,SAASC,iBAAgBrK,KAAM2G,UAAUiC,OAAQ,IACjDwB,SAASC,iBAAgBrK,KAAM2G,UAAUuB,KAAM,qBAGtCpI,MAAAA,SAAAA,GAKb,IAAM0K,EAAoB1K,EAAQS,MAAQT,EAAQ6B,OAAOe,IACnD+H,EAAoB3K,EAAQ6B,OAAOgB,IAAM7C,EAAQ6B,OAAOe,SACzDgI,WAAa5K,EAAQsD,MAAQoH,EAAYC,mBAG1BlK,MAAA,WACpBP,KAAS2I,mBACFhC,SAASgE,MAAMzC,KAApB,QACKvB,SAASgE,MAAM/B,OAApB,GAAAgC,OAAA5K,KAAqC0K,WAArC,aAEK/D,SAASgE,MAAM/B,OAApB,QACKjC,SAASgE,MAAMzC,KAApB,GAAA0C,OAAA5K,KAAmC0K,WAAnC,gCAImBG,MAAAA,SAAAA,GACjBA,QACGlE,SAAS7C,UAAUoD,OAAxB,qCACKP,SAAS7C,UAAUmC,IAAxB,qCAEKU,SAAS7C,UAAUoD,OAAxB,mCACKP,SAAS7C,UAAUmC,IAAxB,qDAI0B1F,MAAA,uBAChBoG,SAAS7C,UAAUC,SAAxB,gEA9FLyC,KAFN7G,EAAA,uCAE0B+E,uSCF1B,4jCAEM0B,IAsCSA,EAtCTA,SAAAA,sQAGJA,EAAYqD,GAAsB,IAAAlI,qGAAAuJ,CAAA9K,KAAAoG,IAChC7E,EAAAE,EAAAC,KAAA1B,OACK4F,OAAO6D,GACZlI,EAAKwJ,eAH2BxJ,+BAMnBkI,MAAAA,SAAAA,QACRhD,OAASV,SAASC,cAAT,YACTS,OAAO3C,UAAUmC,IAAtB,mBACAwD,EAAQvD,OAARlG,KAAoByG,8BAGOlG,MAAA,gBACtBkG,OAAOkD,iBAAZ,YAAA3J,KAA+CgL,qBAAqBrK,KAA1BX,qCAGf6E,MAAAA,SAAAA,QACtBtB,UAAL,wBAAwCsB,sBAGftE,MAAA,uBACbkG,OAAO3C,UAAUC,SAAtB,4BAA6DqG,SAASC,iBAAgBrK,KAAMyG,QAAQ6D,OAAQ,IAAMF,SAASC,iBAAgBrK,KAAMyG,QAAQ8D,MAAO,6BAGlJM,MAAAA,SAAAA,GACjBA,QACGpE,OAAO3C,UAAUoD,OAAtB,mCACKT,OAAO3C,UAAUmC,IAAtB,mCAEKQ,OAAO3C,UAAUoD,OAAtB,iCACKT,OAAO3C,UAAUmC,IAAtB,iEAjCAG,KAFNzG,EAAA,uCAEwB+E,0TCFlBgC,IAqFSA,EArFTA,oBAOJA,EAAYuE,gGAAqBC,CAAAlL,KAAA0G,QAC1Bd,OAAOqF,0CAGCA,MAAAA,SAAAA,QACRrE,MAAQb,SAASC,cAAT,YACRmF,OAASpF,SAASC,cAAT,UACTY,MAAM9C,UAAUmC,IAArB,uBACKkF,OAAOrH,UAAUmC,IAAtB,wBACKW,MAAMV,OAAXlG,KAAuBmL,QACvBF,EAAO/E,OAAPlG,KAAmB4G,yBAGLrG,MAAAA,SAAAA,QACT4K,OAAOC,YAAcC,OAAO9K,2BAGbkD,MAAAA,SAAAA,EAAmBC,GACvC,IAAM4H,EAAUD,OAAO5H,GACjB8H,EAAQF,OAAO3H,QAChByH,OAAOC,YAAZ,GAAAR,OAA6BU,EAA7B,OAAAV,OAA0CW,0BAGvB5H,MAAAA,SAAAA,GACfA,QACGiD,MAAM9C,UAAUoD,OAArB,4BACKN,MAAM9C,UAAUmC,IAArB,8BAEKW,MAAM9C,UAAUoD,OAArB,4BACKN,MAAM9C,UAAUmC,IAArB,yCAIW5C,MAAAA,SAAAA,GACb,GAAArD,KAAS2I,aAAc,CACrB,IAAM6C,EAA2BnB,iBAAiBhH,GAASuF,OACrD6C,EAAwBpB,iBAAiBhH,GAASiH,YACnDf,aAAea,SAASoB,EAAkB,IAAMpB,SAASqB,EAAe,IAAM,MAC9E,CACL,IAAMC,EAAyBrB,iBAAiBhH,GAAS6E,KACnDyD,EAAuBtB,iBAAiBhH,GAASkH,WAClDhB,aAAea,SAASsB,EAAgB,IAAMtB,SAASuB,EAAc,IAAM,mBAI9DpL,MAAA,WACpBP,KAAS4G,MAAM9C,UAAUC,SAArB,iCACG6C,MAAM+D,MAAMzC,KAAjB,QACKtB,MAAM+D,MAAM/B,OAAjB,GAAAgC,OAAA5K,KAAkCuJ,aAAlC,aAEK3C,MAAM+D,MAAM/B,OAAjB,QACKhC,MAAM+D,MAAMzC,KAAjB,GAAA0C,OAAA5K,KAAgCuJ,aAAhC,gCAImBsB,MAAAA,SAAAA,GACjBA,QACGjE,MAAM9C,UAAUoD,OAArB,kCACKN,MAAM9C,UAAUmC,IAArB,kCAEKW,MAAM9C,UAAUoD,OAArB,gCACKN,MAAM9C,UAAUmC,IAArB,+CAIqB1F,MAAA,uBACXqG,MAAM9C,UAAUC,SAArB,2BAA2DqG,SAASC,iBAAgBrK,KAAM4G,OAAO0D,OAAQ,IAAMF,SAASC,iBAAgBrK,KAAM4G,OAAO2D,MAAO,oBAG7IhK,MAAA,uBACVqG,MAAM9C,UAAUC,SAArB,2BAA2DqG,SAASC,iBAAgBrK,KAAM4G,OAAOgC,OAAQ,IAAMwB,SAASC,iBAAgBrK,KAAM4G,OAAOsB,KAAM,wBAGtI3H,MAAA,uBAChBqG,MAAM9C,UAAUC,SAArB,6DAjFL2C,iSCAN,4jCAEML,IAwGSA,EAxGTA,SAAAA,sQAKJA,EAAYoD,GAAsB,IAAAlI,qGAAAqK,CAAA5L,KAAAqG,IAChC9E,EAAAE,EAAAC,KAAA1B,OACK4F,OAAO6D,GACZlI,EAAKwJ,eAH2BxJ,+BAMnBkI,MAAAA,SAAAA,QACRoC,KAAO9F,SAASC,cAAT,YACP6F,KAAK/H,UAAUmC,IAApB,iBACAwD,EAAQvD,OAARlG,KAAoB6L,4BAGOtL,MAAA,gBACtBsL,KAAKlC,iBAAV,YAAA3J,KAA6C8L,mBAAmBnL,KAAxBX,mCAGf6E,MAAAA,SAAAA,QACpBtB,UAAL,wBAAwCsB,4BAGnBgG,MAAAA,SAAAA,GACjBA,QACGgB,KAAK/H,UAAUoD,OAApB,iCACK2E,KAAK/H,UAAUmC,IAApB,iCAEK4F,KAAK/H,UAAUoD,OAApB,+BACK2E,KAAK/H,UAAUmC,IAApB,gDAIaU,MAAAA,SAAAA,GACf,IAAI+D,EACAqB,OACCF,KAAKlB,MAAM/B,OAAhB,QACKiD,KAAKlB,MAAMzC,KAAhB,GACAlI,KAAS6L,KAAK/H,UAAUC,SAApB,kCACG8H,KAAKlB,MAAML,OAAhB,GACAI,EAAaN,SAASC,iBAAiB1D,GAAUuB,KAAM,IACvD6D,EAAgB3B,SAASC,iBAAiB1D,GAAU4D,MAAO,SACtDyB,oBAAoBtB,EAAYqB,QAChCF,KAAKlB,MAAMJ,MAAhB,GAAAK,OAAA5K,KAAgCiM,OAAhC,aAEKJ,KAAKlB,MAAMJ,MAAhB,GACAG,EAAaN,SAASC,iBAAiB1D,GAAUiC,OAAQ,IACzDmD,EAAgB3B,SAASC,iBAAiB1D,GAAU2D,OAAQ,SACvD0B,oBAAoBtB,EAAYqB,QAChCF,KAAKlB,MAAML,OAAhB,GAAAM,OAAA5K,KAAiCiM,OAAjC,mCAIsBnM,MAAAA,SAAAA,GAOxB,IAAMoM,EAAqBpM,EAAQ2D,UAAY3D,EAAQ6B,OAAOe,IACxDyJ,EAAmBrM,EAAQ4D,QAAU5D,EAAQ6B,OAAOe,IACpD+H,EAAoB3K,EAAQ6B,OAAOgB,IAAM7C,EAAQ6B,OAAOe,IACxD0J,EAAyBtM,EAAQsD,MAAQ8I,EAAazB,GACtD4B,EAAuBvM,EAAQsD,MAAQ+I,EAAW1B,GAClDsB,EAAwB3B,SAC5BC,iBAAiBvK,EAAQuD,SAASkH,MAClC,IAEI+B,EAAsBD,EAAeN,EAAgB,EACrDQ,EAAwBH,EAAiBL,EAAgB,EACzDS,EAAoBxJ,KAAKG,IAAImJ,EAAcC,GACjDvM,KAAS6L,KAAK/H,UAAUC,SAApB,kCACG8H,KAAKlB,MAAML,OAAhB,QACKuB,KAAKlB,MAAM/B,OAAhB,QACKiD,KAAKlB,MAAMJ,MAAhB,GAAAK,OAA2B4B,EAA3B,WACKC,oBAAoBL,EAAgBC,EAAcN,QAClDF,KAAKlB,MAAMzC,KAAhB,GAAA0C,OAAA5K,KAA+BiM,OAA/B,aAEKJ,KAAKlB,MAAMJ,MAAhB,QACKsB,KAAKlB,MAAMzC,KAAhB,QACK2D,KAAKlB,MAAML,OAAhB,GAAAM,OAA4B4B,EAA5B,WACKC,oBAAoBL,EAAgBC,EAAcN,QAClDF,KAAKlB,MAAM/B,OAAhB,GAAAgC,OAAA5K,KAAiCiM,OAAjC,oCAIwBvB,MAAAA,SAAAA,EAAoBqB,QACzCE,OAASvB,EAAaqB,EAAgB,+BAI3CK,MAAAA,SAAAA,EACAC,EACAN,QAEKE,OAASG,EAAiBC,EAC3BD,EAAiBL,EAAgB,EACjCM,EAAeN,EAAgB,oCApGjC1F,KAFN1G,EAAA,uCAEsB+E,uSCDtB,4jCAEM6B,IAmISA,EAnITA,SAAAA,sQAOJA,EAAYkD,GAAsB,IAAAlI,qGAAAmL,CAAA1M,KAAAuG,IAChChF,EAAAE,EAAAC,KAAA1B,OACK4F,OAAO6D,GACZlI,EAAKwJ,eAH2BxJ,+BAMnBkI,MAAAA,SAAAA,QACRA,QAAUA,OACVkD,OAAS5G,SAASC,cAAT,YACT2G,OAAO7I,UAAUmC,IAAtB,wBACKwD,QAAQvD,OAAblG,KAAyB2M,iCAGYpM,MAAA,WACrC,IAAMqM,EAAoB7G,SAASC,cAAT,cAC1B4G,EAAK9I,UAAUmC,IAAf,uBACAjG,KAAS2I,aACPiE,EAAK9I,UAAUmC,IAAf,gCAEA2G,EAAK9I,UAAUmC,IAAf,kCAEK2G,wBAGoBrM,MAAA,gBACtBoM,OAAOhD,iBAAZ,YAAA3J,KAA+C6M,qBAAqBlM,KAA1BX,qCAGf6E,MAAAA,SAAAA,QACtBtB,UAAL,wBAAwCsB,sBAGzB/E,MAAAA,SAAAA,EAAiB6G,GAC5B7G,EAAQgC,eACL6K,OAAO7I,UAAUoD,OAAtB,mCACKyF,OAAO7I,UAAUmC,IAAtB,mCAEK0G,OAAO7I,UAAUoD,OAAtB,iCACKyF,OAAO7I,UAAUmC,IAAtB,+BAN2D,IAQrDpE,EAAS/B,EAAT+B,KACFiL,EAAchN,EAAQ6B,OAAOgB,IAAM7C,EAAQ6B,OAAOe,SACnDqK,kBAAkBlL,EAAMiL,QACxBE,YAAYrG,QACZsG,uBACAC,uBAAuBpN,QACvBqN,gBAAgBrN,8BAGG+B,MAAAA,SAAAA,EAAciL,QACjCM,cAAgBN,EAAMjL,GAAS,EAAIiL,EAAMjL,EAAO,EAAImB,KAAKuB,MAAMuI,EAAMjL,EAAO,wBAG/D8E,MAAAA,SAAAA,GAClB,IAAIoF,EAEAsB,EACJrN,KAAS2I,mBACFgE,OAAOhC,MAAMJ,MAAlB,QACKoC,OAAOhC,MAAMzC,KAAlB,GACA6D,EAAgB3B,SAASC,iBAAiB1D,GAAU2D,OAAQ,IAE5D+C,EADcjD,SAASC,iBAAgBrK,KAAMyJ,SAASa,OAAQ,IAClCyB,OACvBY,OAAOhC,MAAML,OAAlB,GAAAM,OAA8ByC,EAA9B,WACKV,OAAOhC,MAAM5C,IAAlB,GAAA6C,OAA2BmB,EAAgB,EAA3C,aAEKY,OAAOhC,MAAML,OAAlB,QACKqC,OAAOhC,MAAM5C,IAAlB,GACAgE,EAAgB3B,SAASC,iBAAiB1D,GAAU4D,MAAO,IAE3D8C,EADcjD,SAASC,iBAAgBrK,KAAMyJ,SAASc,MAAO,IACjCwB,OACvBY,OAAOhC,MAAMJ,MAAlB,GAAAK,OAA6ByC,EAA7B,WACKV,OAAOhC,MAAMzC,KAAlB,GAAA0C,OAA4BmB,EAAgB,EAA5C,uCAI2BjM,MAAAA,SAAAA,QACxB6M,OAAOW,UAAZ,OACA,IAAMC,EAAkBzN,EAAQ+B,MAAQ/B,EAAQ6B,OAAOgB,IAAM7C,EAAQ6B,OAAOe,KAAQ,IAC3E8K,EAAI,EAAGA,EAACxN,KAAQoN,cAAeI,GAAK,EAAG,CAC9C,IAAMZ,EAAI5M,KAAQiN,uBACbN,OAAOzG,OAAO0G,GACnB,IAAMa,EAAWD,EAAID,EAAiB,IAAM,IAAMC,EAAID,EACtDvN,KAAS2I,aACPiE,EAAKjC,MAAM/B,OAAX,GAAAgC,OAAuB6C,EAAvB,KAEAb,EAAKjC,MAAMzC,KAAX,GAAA0C,OAAqB6C,EAArB,+BAKkB3N,MAAAA,SAAAA,GAAuB,IAAA4N,EAAA1N,KAC5BA,KAAQ2M,OAAOgB,iBAAZ,wBACRxI,SAAZ,SAAqByI,EAAIC,GACvB,IAAMtN,EAAgBmN,EAAKI,UAAUD,EAAO/N,GACtCiO,EAAQhI,SAASC,cAAT,OACd+H,EAAMjK,UAAUmC,IAAhB,uBACIyH,EAAK/E,aACPoF,EAAMjK,UAAUmC,IAAhB,gCAEA8H,EAAMjK,UAAUmC,IAAhB,kCAEF8H,EAAMC,UAAN,GAAApD,OAAqBrK,GACrBqN,EAAG1H,OAAO6H,yBAIIF,MAAAA,SAAAA,EAAe/N,GAC/B,IAAIS,SAEFA,EADY,IAAVsN,EACM/N,EAAQ6B,OAAOe,IACdmL,IAAK7N,KAAUoN,cAAgB,EAChCtN,EAAQ6B,OAAOgB,IAEfkL,EAAQ/N,EAAQ+B,KAAO/B,EAAQ6B,OAAOe,IAEzCM,KAAKC,MAAM1C,uBAGUA,MAAA,uBAChBoM,OAAO7I,UAAUC,SAAtB,8DA/HLwC,KAFN5G,EAAA,uCAEwB+E,gCCKxB,MAEWuJ,EACHC,EAHRC,KAAAxO,EAAA,2QAEWsO,EA+CTG,OA9CMF,EAAO,CACXhM,KADc,SACTrC,EAAwBC,GAC3B,GAAImO,EAACjO,MAAO2D,KAAR,UACFsK,EAAEI,MAAF,6DACK,CACL,IAAMC,EAAY,IAAI1O,EAAAA,QAAUC,EAAWC,GAC3CmO,EAACjO,MAAO2D,KAAR,CACE2K,UAAAA,EAAWC,QAAQ,MAIzBC,OAXc,SAWP1O,GAAuB,IACpBG,EAAUgO,EAACjO,MAAO2D,KAAR,aAAV1D,MACFqO,EAAYL,EAACjO,MAAO2D,KAAR,aAClB1D,EAAMH,QAAUA,EAChBG,EAAMiC,KAAKjC,EAAMH,SACjBwO,EAAUjO,cAEZoO,eAlBc,SAkBCxM,GAAwB,IAC7BhC,EAAUgO,EAACjO,MAAO2D,KAAR,aAAV1D,MACFqO,EAAYL,EAACjO,MAAO2D,KAAR,aAClB1D,EAAMH,QAAQmC,SAAWA,EACzBhC,EAAMiC,KAAKjC,EAAMH,SACjBwO,EAAUjO,cAEZqO,WAzBc,kBA0BLT,EAACjO,MAAO2D,KAAR,aAA0B1D,MAAMH,UAW3CmO,EAAEU,GAAGC,SAAL,SAA0BC,GACxB,OAAIX,EAAQW,GACHX,EAAQW,GAAiBC,MAAzB9O,KAAqC+O,MAAMC,UAAU9J,MAAMxD,KAAKuN,UAAW,IAEhF,WAAAC,EAAOL,IAAiCA,OAG5CZ,EAAEI,MAAF,UAAAzD,OAAkBiE,EAAlB,sCAFSX,EAAQhM,KAAKR,KAAb1B,KAAAA,KAA6B,GAAI6O","sources":["src/presenter/presenter.ts","src/model/model.ts","src/eventObserver/eventObserver.ts","src/view/view.ts","src/view/handlerView/handlerView.ts","src/view/trackView/trackView.ts","src/view/valueNoteView/valueNoteView.ts","src/view/barView/barView.ts","src/view/scaleView/scaleView.ts","src/jq.adslider.ts"],"sourcesContent":["import { Config, Model } from '../model/model';\nimport View from '../view/view';\n\nclass Presenter {\n  private model: Model;\n\n  private view: View;\n\n  constructor(container: HTMLElement, options: Config) {\n    this.model = new Model(options);\n    this.view = new View(container);\n    this.updateView();\n    this.addObservers();\n  }\n\n  public updateView(): void {\n    this.view.updateView(this.model.options);\n    this.updateObservers();\n  }\n\n  private addObservers(): void {\n    // When position of handler is changing - curValue in Model is updating\n    this.view.addObserver('handlerMove', this.model.setValueFromHandlerPos.bind(this.model));\n\n    // When curVal in Model is changing - pos of handler is calc and then updating\n    this.model.addObserver('calcHandlerPos', this.view.handlerView.calcPos.bind(this.view.handlerView));\n    this.model.addObserver('setHandlerPos', this.view.handlerView.setPos.bind(this.view.handlerView));\n    if (this.view.handlerViewFrom) {\n      this.model.addObserver('calcHandlerPosForDouble', this.view.handlerViewFrom.calcPos.bind(this.view.handlerViewFrom));\n      this.model.addObserver('setHandlerPosForDouble', this.view.handlerViewFrom.setPos.bind(this.view.handlerViewFrom));\n    }\n\n    // When curVal in Model is changing - position of valueNote is calculating and then updating\n    this.model.addObserver('calcValueNotePos', this.view.valueNoteView.calcPos.bind(this.view.valueNoteView));\n    this.model.addObserver('setValueNotePos', this.view.valueNoteView.setPos.bind(this.view.valueNoteView));\n    this.model.addObserver('setOneNote', this.view.setViewOfOneNote.bind(this.view));\n    if (this.view.valueNoteViewFrom) {\n      this.model.addObserver('calcValueNotePosForDouble', this.view.valueNoteViewFrom.calcPos.bind(this.view.valueNoteViewFrom));\n      this.model.addObserver('setValueNotePosForDouble', this.view.valueNoteViewFrom.setPos.bind(this.view.valueNoteViewFrom));\n    }\n\n    // When curValue in Model is changing - value of valueNote is updating\n    this.model.addObserver('setValueOfNote', this.view.valueNoteView.setValue.bind(this.view.valueNoteView));\n    if (this.view.valueNoteViewFrom) {\n      this.model.addObserver('setValueOfNoteForDouble', this.view.valueNoteViewFrom.setValue.bind(this.view.valueNoteViewFrom));\n    }\n\n    // When curValue in Model is changing - width of bar is updating\n    this.model.addObserver('setBarWidth', this.view.barView.setLength.bind(this.view.barView));\n    if (this.view.valueNoteViewFrom) {\n      this.model.addObserver('setBarWidthForDouble', this.view.barView.setLengthForDouble.bind(this.view.barView));\n    }\n  }\n\n  private updateObservers(): void {\n    if (this.view.handlerViewFrom && this.view.valueNoteViewFrom) {\n      this.model.addObserver('calcHandlerPosForDouble', this.view.handlerViewFrom.calcPos.bind(this.view.handlerViewFrom));\n      this.model.addObserver('setHandlerPosForDouble', this.view.handlerViewFrom.setPos.bind(this.view.handlerViewFrom));\n      this.model.addObserver('calcValueNotePosForDouble', this.view.valueNoteViewFrom.calcPos.bind(this.view.valueNoteViewFrom));\n      this.model.addObserver('setValueNotePosForDouble', this.view.valueNoteViewFrom.setPos.bind(this.view.valueNoteViewFrom));\n      this.model.addObserver('setValueOfNoteForDouble', this.view.valueNoteViewFrom.setValue.bind(this.view.valueNoteViewFrom));\n      this.model.addObserver('setBarWidthForDouble', this.view.barView.setLengthForDouble.bind(this.view.barView));\n    }\n  }\n}\n\nexport default Presenter;\n","import EventObserver from '../eventObserver/eventObserver';\n\ninterface Config {\n  limits: {\n    min: number;\n    max: number;\n  };\n  curValue: number;\n  showValueNote: boolean;\n  step: number;\n  vertical: boolean;\n  double: boolean;\n  from: number;\n  to: number;\n}\n\nclass Model extends EventObserver {\n  public limits!: {\n    min: number;\n    max: number;\n  };\n\n  public curValue!: number;\n\n  public showValueNote: boolean;\n\n  private step: number;\n\n  private vertical: boolean;\n\n  private double: boolean;\n\n  public from: number;\n\n  private to: number;\n\n  public options: Config;\n\n  constructor(options: Config) {\n    super();\n    this.limits = options.limits;\n    this.showValueNote = options.showValueNote;\n    this.step = options.step;\n    this.vertical = options.vertical;\n    this.double = options.double;\n    this.from = options.from;\n    this.to = options.to;\n    this.curValue = options.to || options.curValue;\n    this.options = {\n      limits: this.limits,\n      curValue: this.curValue,\n      showValueNote: this.showValueNote,\n      step: this.step,\n      vertical: this.vertical,\n      double: this.double,\n      from: this.from,\n      to: this.to,\n    };\n    this.init(this.options);\n  }\n\n  public init(options: Config): void {\n    this.setLimits(options.limits);\n    this.setStep(options.step);\n    this.setValueTo(options.to);\n    this.setValueFrom(options.from);\n    this.setCurValue(options.curValue);\n    this.setDouble(options.double, options.from);\n  }\n\n  private setDouble(double: boolean, from: number): void {\n    if (double && !from) {\n      this.from = this.limits.min;\n    }\n    this.double = double;\n    this.options.double = double;\n  }\n\n  private setLimits(limits: { min: number; max: number }): void {\n    if (limits.min >= limits.max) {\n      throw new Error('Min can not be the same or more than Max');\n    }\n    this.limits = { min: limits.min, max: limits.max };\n    this.options.limits = { min: limits.min, max: limits.max };\n  }\n\n  private setCurValue(value: number): void {\n    if (value < this.limits.min || value > this.limits.max) {\n      throw new Error('Value must be in range of min and max limits');\n    }\n    if (this.step) {\n      const newVal: number = this.setRoundedCurVal(\n        value,\n        this.step,\n        this.limits.max,\n        this.limits.min,\n      );\n      this.curValue = this.to || newVal;\n      this.options.curValue = this.to || newVal;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private setRoundedCurVal(\n    value: number,\n    step: number,\n    max: number,\n    min: number,\n  ): number {\n    const odd: number = (min - value) % step;\n    if (odd === 0) {\n      return value;\n    }\n    const numberOfSteps: number = Math.round((min - value) / step);\n    let newCurValue: number = step * Math.abs(numberOfSteps) + min;\n    if (newCurValue > max) {\n      newCurValue -= step;\n    }\n    return newCurValue;\n  }\n\n  private setValueTo(value: number): void {\n    if (value < this.limits.min || value > this.limits.max) {\n      throw new Error('Value must be in range of min and max limits');\n    }\n    if (this.step && value) {\n      const newVal: number = this.setRoundedCurVal(\n        value,\n        this.step,\n        this.limits.max,\n        this.limits.min,\n      );\n      this.to = newVal;\n      this.options.to = newVal;\n    }\n  }\n\n  private setValueFrom(value: number): void {\n    if (value < this.limits.min || value > this.limits.max) {\n      throw new Error('Value must be in range of min and max limits');\n    }\n    if (value > this.to && this.to) {\n      throw new Error('Value From must be less than To');\n    }\n    if (this.step && value) {\n      const newVal = this.setRoundedCurVal(\n        value,\n        this.step,\n        this.limits.max,\n        this.limits.min,\n      );\n      this.from = newVal;\n      this.options.from = newVal;\n    }\n  }\n\n  private setStep(value: number): void {\n    if (value > this.limits.max - this.limits.min) {\n      throw new Error('Step can not be more than odd min and max limits');\n    }\n    this.step = value || 1;\n    this.options.step = value || 1;\n  }\n\n  private setValFromAndBroadcast(\n    value: number,\n    edge: number,\n    handler: HTMLElement,\n  ): void {\n    this.from = this.calcValueWithStep(value);\n    const options = { edge, value: this.from, limits: this.limits };\n    this.broadcast('calcHandlerPosForDouble', options);\n    this.broadcast('setHandlerPosForDouble');\n    this.broadcast('calcValueNotePosForDouble', handler);\n    this.broadcast('setValueNotePosForDouble');\n    this.broadcast('setValueOfNoteForDouble', this.from);\n  }\n\n  private setValCurAndBroadcast(\n    value: number,\n    edge: number,\n    handler: HTMLElement,\n  ): void {\n    this.curValue = this.calcValueWithStep(value);\n    const options = { edge, value: this.curValue, limits: this.limits };\n    this.broadcast('calcHandlerPos', options);\n    this.broadcast('setHandlerPos');\n    this.broadcast('calcValueNotePos', handler);\n    this.broadcast('setValueNotePos');\n    this.broadcast('setValueOfNote', this.curValue);\n  }\n\n  private broadcastDouble(edge: number, handler: HTMLElement): void {\n    if (this.double) {\n      const optionsForBar = {\n        edge,\n        valueFrom: this.from,\n        valueTo: this.curValue,\n        limits: this.limits,\n        handler,\n      };\n      this.broadcast('setBarWidthForDouble', optionsForBar);\n      this.broadcast('setOneNote', optionsForBar);\n    } else {\n      this.broadcast('setBarWidth', handler);\n    }\n  }\n\n  public setValueFromHandlerPos(data: {\n    newPos: number;\n    edge: number;\n    handler: HTMLElement;\n  }): void {\n    const value = this.calcValueFromHandlerPos(data.newPos, data.edge);\n    if (data.handler.classList.contains('adslider__handler_from')) {\n      if (this.isValFromMovesOverValTo(value)) {\n        return;\n      }\n      this.setValFromAndBroadcast(value, data.edge, data.handler);\n    } else {\n      if (this.double && this.isValToMovesOverValFrom(value)) {\n        return;\n      }\n      this.setValCurAndBroadcast(value, data.edge, data.handler);\n    }\n    this.broadcastDouble(data.edge, data.handler);\n  }\n\n  private isValFromMovesOverValTo(value: number): boolean {\n    return value > this.curValue;\n  }\n\n  private isValToMovesOverValFrom(value: number): boolean {\n    return value < this.from;\n  }\n\n  public calcValueFromHandlerPos(newPos: number, edge: number): number {\n    const odds: number = this.limits.max - this.limits.min;\n    return Math.round(this.limits.min + odds * (newPos / edge));\n  }\n\n  private calcValueWithStep(value: number): number {\n    const AllNumberOfSteps: number = Math.floor(\n      Math.abs(this.limits.max - this.limits.min) / this.step,\n    );\n    const maxStepValue: number = this.limits.min + AllNumberOfSteps * this.step;\n    const numberOfSteps: number = Math.round(\n      (value - this.limits.min) / this.step,\n    );\n    let newValue: number = this.limits.min + this.step * numberOfSteps;\n    if (newValue < this.limits.min) {\n      newValue += this.step;\n    }\n    if (newValue > this.limits.max) {\n      newValue -= this.step;\n    }\n    if (value > maxStepValue) {\n      if (value > maxStepValue + (this.limits.max - maxStepValue) / 2) {\n        newValue = this.limits.max;\n      } else {\n        newValue = maxStepValue;\n      }\n    }\n    return newValue;\n  }\n}\n\nexport { Model, Config };\n","class EventObserver {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  public observers: { [event: string]: Function[] };\n\n  constructor() {\n    this.observers = {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  public addObserver(event: string, newObserver: Function): void {\n    if (this.observers[event]) {\n      if (this.observers[event].includes(newObserver)) {\n        throw new Error('Observer is already in the list!');\n      }\n      this.observers[event].push(newObserver);\n    } else {\n      this.observers[event] = [];\n      this.observers[event].push(newObserver);\n    }\n  }\n\n  public broadcast(event: string, data?: unknown): void {\n    if (this.observers[event] === undefined) {\n      throw new Error('There is no such observer in the list!');\n    }\n    const observersClone = this.observers[event].slice(0);\n    observersClone.forEach((subscriber) => {\n      subscriber(data);\n    });\n  }\n}\n\nexport default EventObserver;\n","import HandlerView from './handlerView/handlerView';\nimport TrackView from './trackView/trackView';\nimport ValueNoteView from './valueNoteView/valueNoteView';\nimport BarView from './barView/barView';\nimport ScaleView from './scaleView/scaleView';\nimport EventObserver from '../eventObserver/eventObserver';\n\nclass View extends EventObserver {\n  public $el!: HTMLElement | null;\n\n  public handlerView!: HandlerView;\n\n  public handlerViewFrom?: HandlerView;\n\n  public valueNoteViewFrom?: ValueNoteView;\n\n  public valueNoteViewTo!: ValueNoteView;\n\n  public valueNoteViewCommon?: ValueNoteView;\n\n  public trackView!: TrackView;\n\n  public valueNoteView!: ValueNoteView;\n\n  public barView!: BarView;\n\n  public scaleView!: ScaleView;\n\n  public $adslider!: HTMLElement;\n\n  private handlerShift!: number;\n\n  constructor(container: HTMLElement) {\n    super();\n    this.render(container);\n    this.addObservers();\n  }\n\n  private render(container: HTMLElement): void {\n    this.$el = container;\n    this.$adslider = document.createElement('div');\n    this.$adslider.classList.add('adslider');\n    this.$el.append(this.$adslider);\n\n    this.trackView = new TrackView(this.$adslider);\n    this.barView = new BarView(this.$adslider);\n    this.scaleView = new ScaleView(this.$adslider);\n    this.handlerView = new HandlerView(this.trackView.$track);\n    this.valueNoteView = new ValueNoteView(this.$adslider);\n\n    this.handlerViewFrom = new HandlerView(this.trackView.$track);\n    this.handlerViewFrom.$handler.classList.add('adslider__handler_from');\n    this.valueNoteViewFrom = new ValueNoteView(this.$adslider);\n    this.valueNoteViewFrom.$note.classList.add('adslider__note_from');\n    this.valueNoteView.$note.classList.add('adslider__note_to');\n  }\n\n  public updateView(options: {\n    vertical: boolean;\n    curValue: number;\n    limits: { max: number; min: number };\n    showValueNote: boolean;\n    double: boolean;\n    from: number;\n    to: number;\n    step: number;\n  }): void {\n    this.setVerticalViewForSingle(options.vertical);\n    this.handlerView.calcPos({\n      edge: this.getEdge(this.handlerView),\n      value: options.curValue,\n      limits: options.limits,\n    });\n    this.handlerView.setPos();\n    this.valueNoteView.calcPos(this.handlerView.$handler);\n    this.valueNoteView.setPos();\n    this.valueNoteView.setValue(options.curValue);\n    this.valueNoteView.showValueNote(options.showValueNote);\n    this.scaleView.drawScale(options, this.handlerView.$handler);\n    if (options.double) {\n      this.updateViewForDouble(\n        options.vertical,\n        options.from,\n        options.to,\n        options.curValue,\n        options.limits,\n        options.showValueNote,\n      );\n    } else {\n      if (this.handlerViewFrom) {\n        this.deleteHandlerFrom();\n      }\n      this.barView.setLength(this.handlerView.$handler);\n    }\n  }\n\n  private deleteHandlerFrom(): void {\n    if (this.handlerViewFrom && this.valueNoteViewFrom) {\n      this.handlerViewFrom.$handler.remove();\n      this.valueNoteViewFrom.$note.remove();\n      delete this.handlerViewFrom;\n      delete this.valueNoteViewFrom;\n    }\n  }\n\n  private updateViewForDouble(\n    vertical: boolean,\n    from: number,\n    to: number,\n    curValue: number,\n    limits: { max: number; min: number },\n    showValueNote: boolean,\n  ): void {\n    if (!this.handlerViewFrom) {\n      this.renderHandlerFrom();\n    }\n    this.setVerticalViewForDouble(vertical);\n    if (this.handlerViewFrom && this.valueNoteViewFrom) {\n      this.handlerViewFrom.calcPos({\n        edge: this.getEdge(this.handlerViewFrom),\n        value: from,\n        limits,\n      });\n      this.handlerViewFrom.setPos();\n      this.valueNoteViewFrom.calcPos(this.handlerViewFrom.$handler);\n      this.valueNoteViewFrom.setPos();\n      this.valueNoteViewFrom.setValue(from);\n      this.valueNoteViewFrom.showValueNote(showValueNote);\n      this.barView.setLengthForDouble({\n        edge: this.getEdge(this.handlerViewFrom),\n        valueFrom: from,\n        valueTo: curValue,\n        limits,\n        handler: this.handlerView.$handler,\n      });\n    }\n    const data = { valueFrom: from, valueTo: to };\n    this.setViewOfOneNote(data);\n  }\n\n  private renderHandlerFrom(): void {\n    this.handlerViewFrom = new HandlerView(this.trackView.$track);\n    this.handlerViewFrom.$handler.classList.add('adslider__handler_from');\n    this.valueNoteViewFrom = new ValueNoteView(this.$adslider);\n    this.valueNoteViewFrom.$note.classList.add('adslider__note_from');\n    this.handlerViewFrom.addObserver(\n      'handlerMousedownEvent',\n      this.moveHandler.bind(this),\n    );\n    this.handlerViewFrom.addObserver(\n      'handlerMousemoveEvent',\n      this.mouseMove.bind(this),\n    );\n  }\n\n  private changeHandlerPos(e: MouseEvent): void {\n    if (this.isDouble()) {\n      if (\n        this.handlerView.$handler.classList.contains(\n          'adslider__handler_horizontal',\n        )\n      ) {\n        this.changeHandlerPosForDoubleHorizontal(e);\n      } else {\n        this.changeHandlerPosForDoubleVertical(e);\n      }\n    } else {\n      const data = {\n        shift: this.handlerView.getLength() / 2,\n        e,\n        handler: this.handlerView,\n      };\n      this.mouseMove(data);\n    }\n  }\n\n  private changeHandlerPosForDoubleVertical(e: MouseEvent): void {\n    if (this.handlerViewFrom) {\n      const handlerFromPos = this.handlerViewFrom.$handler.getBoundingClientRect().top;\n      const handlerToPos = this.handlerView.$handler.getBoundingClientRect().top;\n      const oddToFrom: number = handlerToPos - handlerFromPos;\n      const middlePos = oddToFrom / 2 + handlerFromPos + this.handlerView.getLength() / 2;\n      if (e.clientY >= middlePos) {\n        const data = {\n          shift: this.handlerViewFrom.getLength() / 2,\n          e,\n          handler: this.handlerViewFrom,\n        };\n        this.mouseMove(data);\n      } else {\n        const data = {\n          shift: this.handlerView.getLength() / 2,\n          e,\n          handler: this.handlerView,\n        };\n        this.mouseMove(data);\n      }\n    }\n  }\n\n  private changeHandlerPosForDoubleHorizontal(e: MouseEvent): void {\n    if (this.handlerViewFrom) {\n      const handlerFromPos = this.handlerViewFrom.$handler.getBoundingClientRect().left;\n      const handlerToPos = this.handlerView.$handler.getBoundingClientRect().left;\n      const oddToFrom: number = handlerToPos - handlerFromPos;\n      const middlePos = oddToFrom / 2 + handlerFromPos + this.handlerView.getLength() / 2;\n      if (e.clientX <= middlePos) {\n        const data = {\n          shift: this.handlerViewFrom.getLength() / 2,\n          e,\n          handler: this.handlerViewFrom,\n        };\n        this.mouseMove(data);\n      } else {\n        const data = {\n          shift: this.handlerView.getLength() / 2,\n          e,\n          handler: this.handlerView,\n        };\n        this.mouseMove(data);\n      }\n    }\n  }\n\n  private setVerticalViewForSingle(vertical: boolean): void {\n    if (vertical) {\n      this.$adslider.classList.remove('adslider_horizontal');\n      this.$adslider.classList.add('adslider_vertical');\n    } else {\n      this.$adslider.classList.remove('adslider_vertical');\n      this.$adslider.classList.add('adslider_horizontal');\n    }\n    this.trackView.setVerticalView(vertical);\n    this.handlerView.setVerticalView(vertical);\n    this.valueNoteView.setVerticalView(vertical);\n    this.barView.setVerticalView(vertical);\n  }\n\n  private setVerticalViewForDouble(vertical: boolean): void {\n    if (this.handlerViewFrom && this.valueNoteViewFrom) {\n      this.handlerViewFrom.setVerticalView(vertical);\n      this.valueNoteViewFrom.setVerticalView(vertical);\n    }\n  }\n\n  private moveHandler(data: { event: MouseEvent; handler: HTMLElement }): void {\n    this.calcShift(data.event, data.handler);\n  }\n\n  private mouseMove(data: {\n    shift: number;\n    e: MouseEvent;\n    handler: HandlerView;\n  }): void {\n    let newPos;\n    if (data.e.type === 'mousedown') {\n      newPos = this.calcNewPos(data.shift, data.e);\n    } else {\n      newPos = this.calcNewPos(this.handlerShift, data.e);\n    }\n    const edge: number = this.getEdge(data.handler);\n    newPos = this.checkNewPos(newPos);\n    const options = { newPos, edge, handler: data.handler.$handler };\n    this.broadcast('handlerMove', options);\n  }\n\n  private getEdge(handler: HandlerView): number {\n    return this.trackView.getLength() - handler.getLength();\n  }\n\n  private checkNewPos(newPos: number): number {\n    const edge = this.getEdge(this.handlerView);\n    let newPosCopy = newPos;\n    if (newPos < 0) {\n      newPosCopy = 0;\n    } else if (newPos > edge) {\n      newPosCopy = edge;\n    }\n    return newPosCopy;\n  }\n\n  private calcShift(e: MouseEvent, handler: HTMLElement): void {\n    const shift = this.isVertical()\n      ? e.clientY - handler.getBoundingClientRect().bottom\n      : e.clientX - handler.getBoundingClientRect().left;\n    this.handlerShift = Math.abs(shift);\n  }\n\n  private isVertical(): boolean {\n    return this.$adslider.classList.contains('adslider_vertical');\n  }\n\n  private isDouble(): boolean {\n    if (this.handlerViewFrom) {\n      return true;\n    }\n    return false;\n  }\n\n  private calcNewPos(shift: number, e: MouseEvent): number {\n    return this.isVertical()\n      ? this.trackView.$track.getBoundingClientRect().bottom - e.clientY - shift\n      : e.clientX - shift - this.trackView.$track.getBoundingClientRect().left;\n  }\n\n  public setViewOfOneNote(options: {\n    valueFrom: number;\n    valueTo: number;\n  }): void {\n    if (this.isSmallDistanceBetweenNotes()) {\n      this.makeCommonNoteView(options.valueFrom, options.valueTo);\n    } else if (this.valueNoteViewCommon) {\n      this.removeValueNotesFromAndTo();\n    }\n  }\n\n  private isSmallDistanceBetweenNotes(): boolean {\n    if (this.valueNoteViewFrom) {\n      const distAmongNotes: number = this.valueNoteView.getPos() - this.valueNoteViewFrom.getPos();\n      if (distAmongNotes < this.valueNoteView.getSize()) {\n        return true;\n      }\n      return false;\n    }\n    return false;\n  }\n\n  private makeCommonNoteView(valueFrom: number, valueTo: number): void {\n    if (this.valueNoteViewFrom) {\n      this.valueNoteViewFrom.showValueNote(false);\n    }\n    this.valueNoteView.showValueNote(false);\n    if (this.valueNoteViewCommon) {\n      this.updateCommonNoteView(valueFrom, valueTo);\n    } else {\n      this.valueNoteViewCommon = new ValueNoteView(this.$adslider);\n      this.valueNoteViewCommon.$note.classList.add('adslider__note_common');\n      this.valueNoteViewCommon.setVerticalView(this.isVertical());\n      this.updateCommonNoteView(valueFrom, valueTo);\n    }\n  }\n\n  private updateCommonNoteView(valueFrom: number, valueTo: number): void {\n    if (this.handlerViewFrom && this.valueNoteViewCommon) {\n      this.valueNoteViewCommon.setValueForTwo(valueFrom, valueTo);\n      const leftEdgeOfHandlerFrom = this.handlerViewFrom.getPos();\n      const rightEdgeOfHandlerTo = this.handlerView.getPos() + this.handlerView.getLength();\n      const distAmongEdgesOfHandlers = rightEdgeOfHandlerTo - leftEdgeOfHandlerFrom;\n      this.valueNoteViewCommon.valueNotePos = leftEdgeOfHandlerFrom + distAmongEdgesOfHandlers / 2;\n      this.valueNoteViewCommon.setPos();\n    }\n  }\n\n  private removeValueNotesFromAndTo(): void {\n    if (this.valueNoteViewFrom && this.valueNoteViewCommon) {\n      this.valueNoteView.showValueNote(true);\n      this.valueNoteViewFrom.showValueNote(true);\n      this.valueNoteViewCommon.$note.remove();\n      delete this.valueNoteViewCommon;\n    }\n  }\n\n  private addObservers(): void {\n    this.handlerView.addObserver(\n      'handlerMousedownEvent',\n      this.moveHandler.bind(this),\n    );\n    if (this.handlerViewFrom) {\n      this.handlerViewFrom.addObserver(\n        'handlerMousedownEvent',\n        this.moveHandler.bind(this),\n      );\n      this.handlerViewFrom.addObserver(\n        'handlerMousemoveEvent',\n        this.mouseMove.bind(this),\n      );\n    }\n    this.handlerView.addObserver(\n      'handlerMousemoveEvent',\n      this.mouseMove.bind(this),\n    );\n    this.trackView.addObserver(\n      'handlerMousedownEvent',\n      this.changeHandlerPos.bind(this),\n    );\n    this.barView.addObserver(\n      'handlerMousedownEvent',\n      this.changeHandlerPos.bind(this),\n    );\n    this.scaleView.addObserver(\n      'handlerMousedownEvent',\n      this.changeHandlerPos.bind(this),\n    );\n  }\n}\n\nexport default View;\n","import EventObserver from '../../eventObserver/eventObserver';\n\nclass HandlerView extends EventObserver {\n  public $handler!: HTMLElement;\n\n  private $parent!: HTMLElement;\n\n  private handlerPos!: number;\n\n  private handleMouseMove!: (e: MouseEvent) => void;\n\n  private handleMouseUp!: (e: MouseEvent) => void;\n\n  constructor($parent: HTMLElement) {\n    super();\n    this.render($parent);\n  }\n\n  private render($parent: HTMLElement): void {\n    this.$parent = $parent;\n    this.$handler = document.createElement('div');\n    this.$handler.classList.add('adslider__handler');\n    this.$parent.append(this.$handler);\n    this.$handler.addEventListener('mousedown', this.handleHandlerMouseDown.bind(this));\n  }\n\n  private handleHandlerMouseDown(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    const data = { event, handler: this.$handler };\n    this.broadcast('handlerMousedownEvent', data);\n    this.bindMousemove(event);\n  }\n\n  private bindMousemove(event: MouseEvent): void {\n    this.handleMouseMove = this.mouseMove.bind(this);\n    this.handleMouseUp = this.mouseUp.bind(this);\n    if (event.type === 'mousedown') {\n      document.addEventListener('mousemove', this.handleMouseMove);\n      document.addEventListener('mouseup', this.handleMouseUp);\n    }\n  }\n\n  private mouseMove(e: MouseEvent): void {\n    const data = { shift: null, e, handler: this };\n    this.broadcast('handlerMousemoveEvent', data);\n  }\n\n  private mouseUp(): void {\n    document.removeEventListener('mouseup', this.handleMouseUp);\n    document.removeEventListener('mousemove', this.handleMouseMove);\n  }\n\n  public getLength(): number {\n    return this.isVertical()\n      ? parseInt(getComputedStyle(this.$handler).height, 10)\n      : parseInt(getComputedStyle(this.$handler).width, 10);\n  }\n\n  public getPos(): number {\n    return this.isVertical()\n      ? parseInt(getComputedStyle(this.$handler).bottom, 10)\n      : parseInt(getComputedStyle(this.$handler).left, 10);\n  }\n\n  public calcPos(options: {\n    edge: number;\n    value: number;\n    limits: { min: number; max: number };\n  }): void {\n    const oddValMin: number = options.value - options.limits.min;\n    const oddMaxMin: number = options.limits.max - options.limits.min;\n    this.handlerPos = options.edge * (oddValMin / oddMaxMin);\n  }\n\n  public setPos(): void {\n    if (this.isVertical()) {\n      this.$handler.style.left = '';\n      this.$handler.style.bottom = `${this.handlerPos}px`;\n    } else {\n      this.$handler.style.bottom = '';\n      this.$handler.style.left = `${this.handlerPos}px`;\n    }\n  }\n\n  public setVerticalView(verticalView: boolean): void {\n    if (verticalView) {\n      this.$handler.classList.remove('adslider__handler_horizontal');\n      this.$handler.classList.add('adslider__handler_vertical');\n    } else {\n      this.$handler.classList.remove('adslider__handler_vertical');\n      this.$handler.classList.add('adslider__handler_horizontal');\n    }\n  }\n\n  private isVertical(): boolean {\n    return this.$handler.classList.contains('adslider__handler_vertical');\n  }\n}\n\nexport default HandlerView;\n","import EventObserver from '../../eventObserver/eventObserver';\n\nclass TrackView extends EventObserver {\n  public $track!: HTMLElement;\n\n  constructor($parent: HTMLElement) {\n    super();\n    this.render($parent);\n    this.addListeners();\n  }\n\n  private render($parent: HTMLElement): void {\n    this.$track = document.createElement('div');\n    this.$track.classList.add('adslider__track');\n    $parent.append(this.$track);\n  }\n\n  private addListeners(): void {\n    this.$track.addEventListener('mousedown', this.handleTrackMouseDown.bind(this));\n  }\n\n  private handleTrackMouseDown(event: MouseEvent): void {\n    this.broadcast('handlerMousedownEvent', event);\n  }\n\n  public getLength(): number {\n    return this.$track.classList.contains('adslider__track_vertical') ? parseInt(getComputedStyle(this.$track).height, 10) : parseInt(getComputedStyle(this.$track).width, 10);\n  }\n\n  public setVerticalView(verticalView: boolean): void {\n    if (verticalView) {\n      this.$track.classList.remove('adslider__track_horizontal');\n      this.$track.classList.add('adslider__track_vertical');\n    } else {\n      this.$track.classList.remove('adslider__track_vertical');\n      this.$track.classList.add('adslider__track_horizontal');\n    }\n  }\n}\n\nexport default TrackView;\n","class ValueNoteView {\n  public $note!: HTMLElement;\n\n  public $value!: HTMLElement;\n\n  public valueNotePos!: number;\n\n  constructor(parent: HTMLElement) {\n    this.render(parent);\n  }\n\n  private render(parent: HTMLElement): void {\n    this.$note = document.createElement('div');\n    this.$value = document.createElement('p');\n    this.$note.classList.add('adslider__note');\n    this.$value.classList.add('adslider__value');\n    this.$note.append(this.$value);\n    parent.append(this.$note);\n  }\n\n  public setValue(value: number): void {\n    this.$value.textContent = String(value);\n  }\n\n  public setValueForTwo(valueFrom: number, valueTo: number): void {\n    const valFrom = String(valueFrom);\n    const valTo = String(valueTo);\n    this.$value.textContent = `${valFrom} - ${valTo}`;\n  }\n\n  public showValueNote(data: boolean): void {\n    if (data) {\n      this.$note.classList.remove('adslider__note_hide');\n      this.$note.classList.add('adslider__note_show');\n    } else {\n      this.$note.classList.remove('adslider__note_show');\n      this.$note.classList.add('adslider__note_hide');\n    }\n  }\n\n  public calcPos(handler: HTMLElement): void {\n    if (this.isVertical()) {\n      const handlerBottomPos: string = getComputedStyle(handler).bottom;\n      const handlerHeight: string = getComputedStyle(handler).height;\n      this.valueNotePos = parseInt(handlerBottomPos, 10) + parseInt(handlerHeight, 10) / 2;\n    } else {\n      const handlerLeftPos: string = getComputedStyle(handler).left;\n      const handlerWidth: string = getComputedStyle(handler).width;\n      this.valueNotePos = parseInt(handlerLeftPos, 10) + parseInt(handlerWidth, 10) / 2;\n    }\n  }\n\n  public setPos(): void {\n    if (this.$note.classList.contains('adslider__note_vertical')) {\n      this.$note.style.left = '';\n      this.$note.style.bottom = `${this.valueNotePos}px`;\n    } else {\n      this.$note.style.bottom = '';\n      this.$note.style.left = `${this.valueNotePos}px`;\n    }\n  }\n\n  public setVerticalView(verticalView: boolean): void {\n    if (verticalView) {\n      this.$note.classList.remove('adslider__note_horizontal');\n      this.$note.classList.add('adslider__note_vertical');\n    } else {\n      this.$note.classList.remove('adslider__note_vertical');\n      this.$note.classList.add('adslider__note_horizontal');\n    }\n  }\n\n  public getSize(): number {\n    return this.$note.classList.contains('adslider__note_vertical') ? parseInt(getComputedStyle(this.$note).height, 10) : parseInt(getComputedStyle(this.$note).width, 10);\n  }\n\n  public getPos(): number {\n    return this.$note.classList.contains('adslider__note_vertical') ? parseInt(getComputedStyle(this.$note).bottom, 10) : parseInt(getComputedStyle(this.$note).left, 10);\n  }\n\n  private isVertical(): boolean {\n    return this.$note.classList.contains('adslider__note_vertical');\n  }\n}\n\nexport default ValueNoteView;\n","import EventObserver from '../../eventObserver/eventObserver';\n\nclass BarView extends EventObserver {\n  public $bar!: HTMLElement;\n\n  private barPos!: number;\n\n  constructor($parent: HTMLElement) {\n    super();\n    this.render($parent);\n    this.addListeners();\n  }\n\n  private render($parent: HTMLElement): void {\n    this.$bar = document.createElement('div');\n    this.$bar.classList.add('adslider__bar');\n    $parent.append(this.$bar);\n  }\n\n  private addListeners(): void {\n    this.$bar.addEventListener('mousedown', this.handleBarMouseDown.bind(this));\n  }\n\n  private handleBarMouseDown(event: MouseEvent): void {\n    this.broadcast('handlerMousedownEvent', event);\n  }\n\n  public setVerticalView(verticalView: boolean): void {\n    if (verticalView) {\n      this.$bar.classList.remove('adslider__bar_horizontal');\n      this.$bar.classList.add('adslider__bar_vertical');\n    } else {\n      this.$bar.classList.remove('adslider__bar_vertical');\n      this.$bar.classList.add('adslider__bar_horizontal');\n    }\n  }\n\n  public setLength($handler: HTMLElement): void {\n    let handlerPos: number;\n    let handlerLength: number;\n    this.$bar.style.bottom = '';\n    this.$bar.style.left = '';\n    if (this.$bar.classList.contains('adslider__bar_horizontal')) {\n      this.$bar.style.height = '';\n      handlerPos = parseInt(getComputedStyle($handler).left, 10);\n      handlerLength = parseInt(getComputedStyle($handler).width, 10);\n      this.calcBarPosForSingle(handlerPos, handlerLength);\n      this.$bar.style.width = `${this.barPos}px`;\n    } else {\n      this.$bar.style.width = '';\n      handlerPos = parseInt(getComputedStyle($handler).bottom, 10);\n      handlerLength = parseInt(getComputedStyle($handler).height, 10);\n      this.calcBarPosForSingle(handlerPos, handlerLength);\n      this.$bar.style.height = `${this.barPos}px`;\n    }\n  }\n\n  public setLengthForDouble(options: {\n    valueFrom: number;\n    limits: { min: number; max: number };\n    valueTo: number;\n    edge: number;\n    handler: HTMLElement;\n  }): void {\n    const oddFromMin: number = options.valueFrom - options.limits.min;\n    const oddToMin: number = options.valueTo - options.limits.min;\n    const oddMaxMin: number = options.limits.max - options.limits.min;\n    const handlerPosFrom: number = options.edge * (oddFromMin / oddMaxMin);\n    const handlerPosTo: number = options.edge * (oddToMin / oddMaxMin);\n    const handlerLength: number = parseInt(\n      getComputedStyle(options.handler).width,\n      10,\n    );\n    const sumToLength: number = handlerPosTo + handlerLength / 2;\n    const sumFromLength: number = handlerPosFrom + handlerLength / 2;\n    const barLength: number = Math.abs(sumToLength - sumFromLength);\n    if (this.$bar.classList.contains('adslider__bar_horizontal')) {\n      this.$bar.style.height = '';\n      this.$bar.style.bottom = '';\n      this.$bar.style.width = `${barLength}px`;\n      this.calcBarPosForDouble(handlerPosFrom, handlerPosTo, handlerLength);\n      this.$bar.style.left = `${this.barPos}px`;\n    } else {\n      this.$bar.style.width = '';\n      this.$bar.style.left = '';\n      this.$bar.style.height = `${barLength}px`;\n      this.calcBarPosForDouble(handlerPosFrom, handlerPosTo, handlerLength);\n      this.$bar.style.bottom = `${this.barPos}px`;\n    }\n  }\n\n  private calcBarPosForSingle(handlerPos: number, handlerLength: number): void {\n    this.barPos = handlerPos + handlerLength / 2;\n  }\n\n  private calcBarPosForDouble(\n    handlerPosFrom: number,\n    handlerPosTo: number,\n    handlerLength: number,\n  ): void {\n    this.barPos = handlerPosFrom < handlerPosTo\n      ? handlerPosFrom + handlerLength / 2\n      : handlerPosTo + handlerLength / 2;\n  }\n}\n\nexport default BarView;\n","import { Config } from '../../model/model';\nimport EventObserver from '../../eventObserver/eventObserver';\n\nclass ScaleView extends EventObserver {\n  private $parent!: HTMLElement;\n\n  public $scale!: HTMLElement;\n\n  private numberOfLines!: number;\n\n  constructor($parent: HTMLElement) {\n    super();\n    this.render($parent);\n    this.addListeners();\n  }\n\n  private render($parent: HTMLElement): void {\n    this.$parent = $parent;\n    this.$scale = document.createElement('div');\n    this.$scale.classList.add('adslider__scale');\n    this.$parent.append(this.$scale);\n  }\n\n  private renderScaleLine(): HTMLElement {\n    const line: HTMLElement = document.createElement('div');\n    line.classList.add('adslider__scaleLine');\n    if (this.isVertical()) {\n      line.classList.add('adslider__scaleLine_vertical');\n    } else {\n      line.classList.add('adslider__scaleLine_horizontal');\n    }\n    return line;\n  }\n\n  private addListeners(): void {\n    this.$scale.addEventListener('mousedown', this.handleScaleMouseDown.bind(this));\n  }\n\n  private handleScaleMouseDown(event: MouseEvent): void {\n    this.broadcast('handlerMousedownEvent', event);\n  }\n\n  public drawScale(options: Config, $handler: HTMLElement): void {\n    if (options.vertical) {\n      this.$scale.classList.remove('adslider__scale_horizontal');\n      this.$scale.classList.add('adslider__scale_vertical');\n    } else {\n      this.$scale.classList.remove('adslider__scale_vertical');\n      this.$scale.classList.add('adslider__scale_horizontal');\n    }\n    const { step } = options;\n    const odd: number = options.limits.max - options.limits.min;\n    this.calcNumberOfLines(step, odd);\n    this.setScalePos($handler);\n    this.renderScaleLine();\n    this.createListOfScaleLines(options);\n    this.renderScaleSign(options);\n  }\n\n  private calcNumberOfLines(step: number, odd: number): void {\n    this.numberOfLines = odd % step === 0 ? odd / step + 1 : Math.floor(odd / step + 2);\n  }\n\n  private setScalePos($handler: HTMLElement): void {\n    let handlerLength: number;\n    let trackLength: number;\n    let scaleLength: number;\n    if (this.isVertical()) {\n      this.$scale.style.width = '';\n      this.$scale.style.left = '';\n      handlerLength = parseInt(getComputedStyle($handler).height, 10);\n      trackLength = parseInt(getComputedStyle(this.$parent).height, 10);\n      scaleLength = trackLength - handlerLength;\n      this.$scale.style.height = `${scaleLength}px`;\n      this.$scale.style.top = `${handlerLength / 2}px`;\n    } else {\n      this.$scale.style.height = '';\n      this.$scale.style.top = '';\n      handlerLength = parseInt(getComputedStyle($handler).width, 10);\n      trackLength = parseInt(getComputedStyle(this.$parent).width, 10);\n      scaleLength = trackLength - handlerLength;\n      this.$scale.style.width = `${scaleLength}px`;\n      this.$scale.style.left = `${handlerLength / 2}px`;\n    }\n  }\n\n  private createListOfScaleLines(options: Config): void {\n    this.$scale.innerHTML = '';\n    const stepPercentage = (options.step / (options.limits.max - options.limits.min)) * 100;\n    for (let i = 0; i < this.numberOfLines; i += 1) {\n      const line = this.renderScaleLine();\n      this.$scale.append(line);\n      const position = i * stepPercentage > 100 ? 100 : i * stepPercentage;\n      if (this.isVertical()) {\n        line.style.bottom = `${position}%`;\n      } else {\n        line.style.left = `${position}%`;\n      }\n    }\n  }\n\n  private renderScaleSign(options: Config): void {\n    const listOfLines = this.$scale.querySelectorAll('.adslider__scaleLine');\n    listOfLines.forEach((el, index) => {\n      const value: number = this.calcSigns(index, options);\n      const $text = document.createElement('div');\n      $text.classList.add('adslider__scaleText');\n      if (this.isVertical()) {\n        $text.classList.add('adslider__scaleText_vertical');\n      } else {\n        $text.classList.add('adslider__scaleText_horizontal');\n      }\n      $text.innerText = `${value}`;\n      el.append($text);\n    });\n  }\n\n  private calcSigns(index: number, options: Config): number {\n    let value: number;\n    if (index === 0) {\n      value = options.limits.min;\n    } else if (index === this.numberOfLines - 1) {\n      value = options.limits.max;\n    } else {\n      value = index * options.step + options.limits.min;\n    }\n    return Math.round(value);\n  }\n\n  private isVertical(): boolean {\n    return this.$scale.classList.contains('adslider__scale_vertical');\n  }\n}\n\nexport default ScaleView;\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable prefer-rest-params */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable func-names */\r\n/* eslint-disable no-param-reassign */\r\nimport './main.scss';\r\n\r\nimport { Config } from './model/model';\r\nimport Presenter from './presenter/presenter';\r\n\r\n(function ($) {\r\n  const methods = {\r\n    init(container: HTMLElement, options: Config): void {\r\n      if ($(this).data('inited')) {\r\n        $.error('Plugin has already been initialized on this selector!');\r\n      } else {\r\n        const presenter = new Presenter(container, options);\r\n        $(this).data({\r\n          presenter, inited: true,\r\n        });\r\n      }\r\n    },\r\n    update(options: Config): void {\r\n      const { model } = $(this).data('presenter');\r\n      const presenter = $(this).data('presenter');\r\n      model.options = options;\r\n      model.init(model.options);\r\n      presenter.updateView();\r\n    },\r\n    updateCurValue(curValue: number): void {\r\n      const { model } = $(this).data('presenter');\r\n      const presenter = $(this).data('presenter');\r\n      model.options.curValue = curValue;\r\n      model.init(model.options);\r\n      presenter.updateView();\r\n    },\r\n    getOptions(): Config {\r\n      return $(this).data('presenter').model.options;\r\n    },\r\n  };\r\n\r\n  type methods = {\r\n    init(container: HTMLElement, options: Config): void,\r\n    update(options: Config): void,\r\n    updateCurValue(curValue: number): void,\r\n    getOptions(): Config,\r\n  };\r\n\r\n  $.fn.adslider = function (methodOrOptions: keyof methods) {\r\n    if (methods[methodOrOptions]) {\r\n      return methods[methodOrOptions].apply(this, Array.prototype.slice.call(arguments, 1));\r\n    }\r\n    if (typeof methodOrOptions === 'object' || !methodOrOptions) {\r\n      return methods.init.call(this, this[0], methodOrOptions);\r\n    }\r\n    $.error(`Method ${methodOrOptions} does not exist on jQuery.tooltip`);\r\n  };\r\n}(jQuery));\r\n"],"names":["$6b539378d18dbf38$var$_view","parcelRequire","Presenter","container","options","$6b539378d18dbf38$var$_classCallCheck","this","model","Model","view","View","updateView","addObservers","value","updateObservers","addObserver","setValueFromHandlerPos","bind","handlerView","calcPos","setPos","handlerViewFrom","valueNoteView","setViewOfOneNote","valueNoteViewFrom","setValue","barView","setLength","setLengthForDouble","_this","$99f5c46c41d41028$var$_classCallCheck","_super","call","limits","showValueNote","step","vertical","from","to","curValue","init","setLimits","setStep","setValueTo","setValueFrom","setCurValue","setDouble","double","min","max","Error","newVal","setRoundedCurVal","numberOfSteps","Math","round","newCurValue","abs","edge","handler","calcValueWithStep","broadcast","optionsForBar","valueFrom","valueTo","data","calcValueFromHandlerPos","newPos","classList","contains","isValFromMovesOverValTo","setValFromAndBroadcast","isValToMovesOverValFrom","setValCurAndBroadcast","broadcastDouble","odds","AllNumberOfSteps","floor","maxStepValue","newValue","EventObserver","$e437091f332d7290$var$_classCallCheck","observers","event","newObserver","includes","push","undefined","slice","forEach","subscriber","$10c53de5d319e5ed$var$_handlerView","$10c53de5d319e5ed$var$_interopRequireDefault","$10c53de5d319e5ed$var$_trackView","$10c53de5d319e5ed$var$_valueNoteView","$10c53de5d319e5ed$var$_barView","$10c53de5d319e5ed$var$_scaleView","$10c53de5d319e5ed$var$_classCallCheck","render","$el","$adslider","document","createElement","add","append","trackView","TrackView","BarView","scaleView","ScaleView","HandlerView","$track","ValueNoteView","$handler","$note","setVerticalViewForSingle","getEdge","drawScale","updateViewForDouble","deleteHandlerFrom","remove","renderHandlerFrom","setVerticalViewForDouble","moveHandler","mouseMove","e","isDouble","changeHandlerPosForDoubleHorizontal","changeHandlerPosForDoubleVertical","shift","getLength","handlerFromPos","getBoundingClientRect","top","middlePos","clientY","left","clientX","setVerticalView","calcShift","type","calcNewPos","handlerShift","checkNewPos","newPosCopy","isVertical","bottom","isSmallDistanceBetweenNotes","makeCommonNoteView","valueNoteViewCommon","removeValueNotesFromAndTo","getPos","getSize","updateCommonNoteView","setValueForTwo","leftEdgeOfHandlerFrom","distAmongEdgesOfHandlers","valueNotePos","changeHandlerPos","$parent","$2691cd67366904f6$var$_classCallCheck","addEventListener","handleHandlerMouseDown","preventDefault","stopPropagation","bindMousemove","handleMouseMove","handleMouseUp","mouseUp","removeEventListener","parseInt","getComputedStyle","height","width","oddValMin","oddMaxMin","handlerPos","style","concat","verticalView","$852e38dab0ef4bfc$var$_classCallCheck","addListeners","handleTrackMouseDown","parent","$a24596fabf59e640$var$_classCallCheck","$value","textContent","String","valFrom","valTo","handlerBottomPos","handlerHeight","handlerLeftPos","handlerWidth","$777febe22fb67884$var$_classCallCheck","$bar","handleBarMouseDown","handlerLength","calcBarPosForSingle","barPos","oddFromMin","oddToMin","handlerPosFrom","handlerPosTo","sumToLength","sumFromLength","barLength","calcBarPosForDouble","$1e9559f310d419a2$var$_classCallCheck","$scale","line","handleScaleMouseDown","odd","calcNumberOfLines","setScalePos","renderScaleLine","createListOfScaleLines","renderScaleSign","numberOfLines","scaleLength","innerHTML","stepPercentage","i","position","_this2","querySelectorAll","el","index","calcSigns","$text","innerText","$","methods","$0574195d21ba86f9$var$_presenter","jQuery","error","presenter","inited","update","updateCurValue","getOptions","fn","adslider","methodOrOptions","apply","Array","prototype","arguments","$0574195d21ba86f9$var$_typeof"],"version":3,"file":"index.d4ebc7f1.js.map"}