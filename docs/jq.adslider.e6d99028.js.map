{"version":3,"sources":["eventObserver/eventObserver.ts","model/model.ts","view/handlerView/handlerView.ts","view/trackView/trackView.ts","view/valueNoteView/valueNoteView.ts","view/barView/barView.ts","view/scaleView/scaleView.ts","view/view.ts","presenter/presenter.ts","jq.adslider.ts"],"names":[],"mappings":"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","file":"jq.adslider.e6d99028.js","sourceRoot":"../src","sourcesContent":["export default class EventObserver {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  public observers: { [event: string]: Function[] };\n\n  constructor() {\n    this.observers = {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  public addObserver(event: string, newObserver: Function): void {\n    if (this.observers[event]) {\n      if (this.observers[event].includes(newObserver)) {\n        throw new Error('Observer is already in the list!');\n      }\n      this.observers[event].push(newObserver);\n    } else {\n      this.observers[event] = [];\n      this.observers[event].push(newObserver);\n    }\n  }\n\n  public broadcast(event: string, data?: unknown): void {\n    if (this.observers[event] === undefined) {\n      throw new Error('There is no such observer in the list!');\n    }\n    const observersClone = this.observers[event].slice(0);\n    observersClone.forEach((subscriber) => {\n      subscriber(data);\n    });\n  }\n}\n","import EventObserver from '../eventObserver/eventObserver';\n\nexport interface Config {\n  limits: {\n    min: number,\n    max: number\n  }\n  curValue: number;\n  showValueNote: boolean;\n  step: number;\n  vertical: boolean;\n  double: boolean;\n  from: number;\n  to: number;\n}\n\nexport class Model extends EventObserver {\n  public limits!: {\n    min: number\n    max: number\n  }\n\n  public curValue!: number;\n\n  public showValueNote: boolean;\n\n  private step: number;\n\n  private vertical: boolean;\n\n  private double: boolean;\n\n  private from: number;\n\n  private to: number;\n\n  public options: Config;\n\n  constructor(options: Config) {\n    super();\n    this.limits = options.limits;\n    this.showValueNote = options.showValueNote;\n    this.step = options.step;\n    this.vertical = options.vertical;\n    this.double = options.double;\n    this.from = options.from;\n    this.to = options.to;\n    this.curValue = options.to || options.curValue;\n    this.options = {\n      limits: this.limits,\n      curValue: this.curValue,\n      showValueNote: this.showValueNote,\n      step: this.step,\n      vertical: this.vertical,\n      double: this.double,\n      from: this.from,\n      to: this.to,\n    };\n    this.init(this.options);\n  }\n\n  public init(options: Config): void {\n    this.setLimits(options.limits);\n    this.setStep(options.step);\n    this.setValueTo(options.to);\n    this.setValueFrom(options.from);\n    this.setCurValue(options.curValue);\n    this.setDouble(options.double, options.from);\n  }\n\n  private setDouble(double: boolean, from: number): void {\n    if (double && !from) {\n      this.from = this.limits.min;\n    }\n    this.double = double;\n    this.options.double = double;\n  }\n\n  private setLimits(limits: { min: number, max: number }): void {\n    if (limits.min >= limits.max) {\n      throw new Error('Min can not be the same or more than Max');\n    }\n    this.limits = { min: limits.min, max: limits.max };\n    this.options.limits = { min: limits.min, max: limits.max };\n  }\n\n  private setCurValue(value: number): void {\n    if (value < this.limits.min || value > this.limits.max) {\n      throw new Error('Value must be in range of min and max limits');\n    }\n    if (this.step) {\n      const newVal: number = this.setRoundedCurVal(\n        value, this.step, this.limits.max,\n      );\n      this.curValue = this.to || newVal;\n      this.options.curValue = this.to || newVal;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private setRoundedCurVal(value: number, step: number, max: number): number {\n    const odd: number = value % step;\n    if (odd === 0) {\n      return value;\n    }\n    const numberOfSteps: number = Math.round(value / step);\n    let newCurValue: number = step * numberOfSteps;\n    if (newCurValue > max) {\n      newCurValue -= step;\n    }\n    return newCurValue;\n  }\n\n  private setValueTo(value: number): void {\n    if (value < this.limits.min || value > this.limits.max) {\n      throw new Error('Value must be in range of min and max limits');\n    }\n    if (this.step) {\n      const newVal: number = this.setRoundedCurVal(\n        value, this.step, this.limits.max,\n      );\n      this.to = newVal;\n      this.options.to = newVal;\n    }\n  }\n\n  private setValueFrom(value: number): void {\n    if (value < this.limits.min || value > this.limits.max) {\n      throw new Error('Value must be in range of min and max limits');\n    }\n    if (value > this.to && this.to) {\n      throw new Error('Value From must be less than To');\n    }\n    if (this.step) {\n      const newVal = this.setRoundedCurVal(value, this.step, this.limits.max);\n      this.from = newVal;\n      this.options.from = newVal;\n    }\n  }\n\n  private setStep(value: number): void {\n    if (value > this.limits.max - this.limits.min) {\n      throw new Error('Step can not be more than odd min and max limits');\n    }\n    this.step = value || 1;\n    this.options.step = value || 1;\n  }\n\n  private setValFromAndBroadcast(value: number, edge: number, handler: HTMLElement): boolean {\n    this.from = this.calcValueWithStep(value, this.from);\n    if (this.isValFromMovesOverValTo()) {\n      return true;\n    }\n    const options = { edge, value: this.from, limits: this.limits };\n    this.broadcast('calcHandlerPosForDouble', options);\n    this.broadcast('setHandlerPosForDouble');\n    this.broadcast('calcValueNotePosForDouble', handler);\n    this.broadcast('setValueNotePosForDouble');\n    this.broadcast('setValueOfNoteForDouble', this.from);\n    return false;\n  }\n\n  private setValCurAndBroadcast(value: number, edge: number, handler: HTMLElement): boolean {\n    this.curValue = this.calcValueWithStep(value, this.curValue);\n    if (this.double && this.isValFromMovesOverValTo()) {\n      return true;\n    }\n    const options = { edge, value: this.curValue, limits: this.limits };\n    this.broadcast('calcHandlerPos', options);\n    this.broadcast('setHandlerPos');\n    this.broadcast('calcValueNotePos', handler);\n    this.broadcast('setValueNotePos');\n    this.broadcast('setValueOfNote', this.curValue);\n    return false;\n  }\n\n  private broadcastDouble(edge: number, handler: HTMLElement): void {\n    if (this.double) {\n      const optionsForBar = {\n        edge,\n        valueFrom: this.from,\n        valueTo: this.curValue,\n        limits: this.limits,\n        handler,\n      };\n      this.broadcast('setBarWidthForDouble', optionsForBar);\n      this.broadcast('setOneNote', optionsForBar);\n    } else {\n      this.broadcast('setBarWidth', handler);\n    }\n  }\n\n  public setValueFromHandlerPos(data: {\n    newPos: number,\n    edge: number,\n    handler: HTMLElement\n  }): void {\n    const value = this.calcValueFromHandlerPos(data.newPos, data.edge);\n    if (data.handler.classList.contains('adslider__handler_from')) {\n      if (this.setValFromAndBroadcast(value, data.edge, data.handler)) {\n        return;\n      }\n      this.setValFromAndBroadcast(value, data.edge, data.handler);\n    } else {\n      if (this.setValCurAndBroadcast(value, data.edge, data.handler)) {\n        return;\n      }\n      this.setValCurAndBroadcast(value, data.edge, data.handler);\n    }\n    this.broadcastDouble(data.edge, data.handler);\n  }\n\n  private isValFromMovesOverValTo(): boolean {\n    return !!(this.curValue - this.from < this.step && this.from > this.curValue);\n  }\n\n  public calcValueFromHandlerPos(newPos: number, edge: number): number {\n    const odds: number = this.limits.max - this.limits.min;\n    return Math.round(this.limits.min + odds * (newPos / edge));\n  }\n\n  private calcValueWithStep(value: number, curValue: number): number {\n    const AllNumberOfSteps: number = Math.floor((this.limits.max - this.limits.min) / this.step);\n    const maxStepValue: number = AllNumberOfSteps * this.step;\n    const numberOfSteps = Math.round((value - curValue) / this.step);\n    let newValue: number = curValue + this.step * numberOfSteps;\n    if (newValue < this.limits.min) {\n      newValue += this.step;\n    }\n    if (newValue > this.limits.max) {\n      newValue -= this.step;\n    }\n    if (value > maxStepValue) {\n      if (value > maxStepValue + (this.limits.max - maxStepValue) / 2) {\n        newValue = this.limits.max;\n      } else {\n        newValue = maxStepValue;\n      }\n    }\n    return newValue;\n  }\n}\n","import EventObserver from '../../eventObserver/eventObserver';\n\nexport default class HandlerView extends EventObserver {\n  public $handler!: HTMLElement;\n\n  private $parent!: HTMLElement;\n\n  private handlerPos!: number;\n\n  private handleMouseMove!: (e: MouseEvent) => void;\n\n  private handleMouseUp!: (e: MouseEvent) => void;\n\n  constructor($parent: HTMLElement) {\n    super();\n    this.render($parent);\n  }\n\n  private render($parent: HTMLElement): void {\n    this.$parent = $parent;\n    this.$handler = document.createElement('div');\n    this.$handler.classList.add('adslider__handler');\n    this.$parent.append(this.$handler);\n    this.$handler.addEventListener('mousedown', this.handleHandlerMouseDown.bind(this));\n  }\n\n  private handleHandlerMouseDown(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    const data = { event, handler: this.$handler };\n    this.broadcast('handlerMousedownEvent', data);\n    this.bindMousemove(event);\n  }\n\n  private bindMousemove(event: MouseEvent): void {\n    this.handleMouseMove = this.mouseMove.bind(this);\n    this.handleMouseUp = this.mouseUp.bind(this);\n    if (event.type === 'mousedown') {\n      document.addEventListener('mousemove', this.handleMouseMove);\n      document.addEventListener('mouseup', this.handleMouseUp);\n    }\n  }\n\n  private mouseMove(e: MouseEvent): void {\n    const data = { shift: null, e, handler: this };\n    this.broadcast('handlerMousemoveEvent', data);\n  }\n\n  private mouseUp(): void {\n    document.removeEventListener('mouseup', this.handleMouseUp);\n    document.removeEventListener('mousemove', this.handleMouseMove);\n  }\n\n  public getLength(): number {\n    return this.isVertical()\n      ? parseInt(getComputedStyle(this.$handler).height, 10)\n      : parseInt(getComputedStyle(this.$handler).width, 10);\n  }\n\n  public getPos(): number {\n    return this.isVertical()\n      ? parseInt(getComputedStyle(this.$handler).bottom, 10)\n      : parseInt(getComputedStyle(this.$handler).left, 10);\n  }\n\n  public calcPos(options: {\n    edge: number;\n    value: number;\n    limits: { min: number; max: number };\n  }): void {\n    const oddValMin: number = options.value - options.limits.min;\n    const oddMaxMin: number = options.limits.max - options.limits.min;\n    this.handlerPos = options.edge * (oddValMin / oddMaxMin);\n  }\n\n  public setPos(): void {\n    if (this.isVertical()) {\n      this.$handler.style.left = '';\n      this.$handler.style.bottom = `${this.handlerPos}px`;\n    } else {\n      this.$handler.style.bottom = '';\n      this.$handler.style.left = `${this.handlerPos}px`;\n    }\n  }\n\n  public setVerticalView(verticalView: boolean): void {\n    if (verticalView) {\n      this.$handler.classList.remove('adslider__handler_horizontal');\n      this.$handler.classList.add('adslider__handler_vertical');\n    } else {\n      this.$handler.classList.remove('adslider__handler_vertical');\n      this.$handler.classList.add('adslider__handler_horizontal');\n    }\n  }\n\n  private isVertical(): boolean {\n    return this.$handler.classList.contains('adslider__handler_vertical');\n  }\n}\n","import EventObserver from '../../eventObserver/eventObserver';\n\nexport default class TrackView extends EventObserver {\n  public $track!: HTMLElement;\n\n  constructor($parent: HTMLElement) {\n    super();\n    this.render($parent);\n    this.addListeners();\n  }\n\n  private render($parent: HTMLElement): void {\n    this.$track = document.createElement('div');\n    this.$track.classList.add('adslider__track');\n    $parent.append(this.$track);\n  }\n\n  private addListeners(): void {\n    this.$track.addEventListener('mousedown', this.handleTrackMouseDown.bind(this));\n  }\n\n  private handleTrackMouseDown(event: MouseEvent): void {\n    this.broadcast('handlerMousedownEvent', event);\n  }\n\n  public getLength(): number {\n    return this.$track.classList.contains('adslider__track_vertical') ? parseInt(getComputedStyle(this.$track).height, 10) : parseInt(getComputedStyle(this.$track).width, 10);\n  }\n\n  public setVerticalView(verticalView: boolean): void {\n    if (verticalView) {\n      this.$track.classList.remove('adslider__track_horizontal');\n      this.$track.classList.add('adslider__track_vertical');\n    } else {\n      this.$track.classList.remove('adslider__track_vertical');\n      this.$track.classList.add('adslider__track_horizontal');\n    }\n  }\n}\n","export default class ValueNoteView {\n  public $note!: HTMLElement;\n\n  public $value!: HTMLElement;\n\n  public valueNotePos!: number;\n\n  constructor(parent: HTMLElement) {\n    this.render(parent);\n  }\n\n  private render(parent: HTMLElement): void {\n    this.$note = document.createElement('div');\n    this.$value = document.createElement('p');\n    this.$note.classList.add('adslider__note');\n    this.$value.classList.add('adslider__value');\n    this.$note.append(this.$value);\n    parent.append(this.$note);\n  }\n\n  public setValue(value: number): void {\n    this.$value.textContent = String(value);\n  }\n\n  public setValueForTwo(valueFrom: number, valueTo: number): void {\n    const valFrom = String(valueFrom);\n    const valTo = String(valueTo);\n    this.$value.textContent = `${valFrom} - ${valTo}`;\n  }\n\n  public showValueNote(data: boolean): void {\n    if (data) {\n      this.$note.classList.remove('adslider__note_hide');\n      this.$note.classList.add('adslider__note_show');\n    } else {\n      this.$note.classList.remove('adslider__note_show');\n      this.$note.classList.add('adslider__note_hide');\n    }\n  }\n\n  public calcPos(handler: HTMLElement): void {\n    if (this.isVertical()) {\n      const handlerBottomPos: string = getComputedStyle(handler).bottom;\n      const handlerHeight: string = getComputedStyle(handler).height;\n      this.valueNotePos = parseInt(handlerBottomPos, 10) + parseInt(handlerHeight, 10) / 2;\n    } else {\n      const handlerLeftPos: string = getComputedStyle(handler).left;\n      const handlerWidth: string = getComputedStyle(handler).width;\n      this.valueNotePos = parseInt(handlerLeftPos, 10) + parseInt(handlerWidth, 10) / 2;\n    }\n  }\n\n  public setPos(): void {\n    if (this.$note.classList.contains('adslider__note_vertical')) {\n      this.$note.style.left = '';\n      this.$note.style.bottom = `${this.valueNotePos}px`;\n    } else {\n      this.$note.style.bottom = '';\n      this.$note.style.left = `${this.valueNotePos}px`;\n    }\n  }\n\n  public setVerticalView(verticalView: boolean): void {\n    if (verticalView) {\n      this.$note.classList.remove('adslider__note_horizontal');\n      this.$note.classList.add('adslider__note_vertical');\n    } else {\n      this.$note.classList.remove('adslider__note_vertical');\n      this.$note.classList.add('adslider__note_horizontal');\n    }\n  }\n\n  public getSize(): number {\n    return this.$note.classList.contains('adslider__note_vertical') ? parseInt(getComputedStyle(this.$note).height, 10) : parseInt(getComputedStyle(this.$note).width, 10);\n  }\n\n  public getPos(): number {\n    return this.$note.classList.contains('adslider__note_vertical') ? parseInt(getComputedStyle(this.$note).bottom, 10) : parseInt(getComputedStyle(this.$note).left, 10);\n  }\n\n  private isVertical(): boolean {\n    return this.$note.classList.contains('adslider__note_vertical');\n  }\n}\n","import EventObserver from '../../eventObserver/eventObserver';\n\nexport default class BarView extends EventObserver {\n  public $bar!: HTMLElement;\n\n  private barPos!: number;\n\n  constructor($parent: HTMLElement) {\n    super();\n    this.render($parent);\n    this.addListeners();\n  }\n\n  private render($parent: HTMLElement): void {\n    this.$bar = document.createElement('div');\n    this.$bar.classList.add('adslider__bar');\n    $parent.append(this.$bar);\n  }\n\n  private addListeners(): void {\n    this.$bar.addEventListener('mousedown', this.handleBarMouseDown.bind(this));\n  }\n\n  private handleBarMouseDown(event: MouseEvent): void {\n    this.broadcast('handlerMousedownEvent', event);\n  }\n\n  public setVerticalView(verticalView: boolean): void {\n    if (verticalView) {\n      this.$bar.classList.remove('adslider__bar_horizontal');\n      this.$bar.classList.add('adslider__bar_vertical');\n    } else {\n      this.$bar.classList.remove('adslider__bar_vertical');\n      this.$bar.classList.add('adslider__bar_horizontal');\n    }\n  }\n\n  public setLength($handler: HTMLElement): void {\n    let handlerPos: number;\n    let handlerLength: number;\n    this.$bar.style.bottom = '';\n    this.$bar.style.left = '';\n    if (this.$bar.classList.contains('adslider__bar_horizontal')) {\n      this.$bar.style.height = '';\n      handlerPos = parseInt(getComputedStyle($handler).left, 10);\n      handlerLength = parseInt(getComputedStyle($handler).width, 10);\n      this.calcBarPosForSingle(handlerPos, handlerLength);\n      this.$bar.style.width = `${this.barPos}px`;\n    } else {\n      this.$bar.style.width = '';\n      handlerPos = parseInt(getComputedStyle($handler).bottom, 10);\n      handlerLength = parseInt(getComputedStyle($handler).height, 10);\n      this.calcBarPosForSingle(handlerPos, handlerLength);\n      this.$bar.style.height = `${this.barPos}px`;\n    }\n  }\n\n  public setLengthForDouble(options: {\n    valueFrom: number;\n    limits: { min: number; max: number };\n    valueTo: number;\n    edge: number;\n    handler: HTMLElement;\n  }): void {\n    const oddFromMin: number = options.valueFrom - options.limits.min;\n    const oddToMin: number = options.valueTo - options.limits.min;\n    const oddMaxMin: number = options.limits.max - options.limits.min;\n    const handlerPosFrom: number = options.edge * (oddFromMin / oddMaxMin);\n    const handlerPosTo: number = options.edge * (oddToMin / oddMaxMin);\n    const handlerLength: number = parseInt(\n      getComputedStyle(options.handler).width,\n      10,\n    );\n    const sumToLength: number = handlerPosTo + handlerLength / 2;\n    const sumFromLength: number = handlerPosFrom + handlerLength / 2;\n    const barLength: number = Math.abs(sumToLength - sumFromLength);\n    if (this.$bar.classList.contains('adslider__bar_horizontal')) {\n      this.$bar.style.height = '';\n      this.$bar.style.bottom = '';\n      this.$bar.style.width = `${barLength}px`;\n      this.calcBarPosForDouble(handlerPosFrom, handlerPosTo, handlerLength);\n      this.$bar.style.left = `${this.barPos}px`;\n    } else {\n      this.$bar.style.width = '';\n      this.$bar.style.left = '';\n      this.$bar.style.height = `${barLength}px`;\n      this.calcBarPosForDouble(handlerPosFrom, handlerPosTo, handlerLength);\n      this.$bar.style.bottom = `${this.barPos}px`;\n    }\n  }\n\n  private calcBarPosForSingle(handlerPos: number, handlerLength: number): void {\n    this.barPos = handlerPos + handlerLength / 2;\n  }\n\n  private calcBarPosForDouble(\n    handlerPosFrom: number,\n    handlerPosTo: number,\n    handlerLength: number,\n  ): void {\n    this.barPos = handlerPosFrom < handlerPosTo\n      ? handlerPosFrom + handlerLength / 2\n      : handlerPosTo + handlerLength / 2;\n  }\n}\n","import { Config } from '../../model/model';\nimport EventObserver from '../../eventObserver/eventObserver';\n\nexport default class ScaleView extends EventObserver {\n  private $parent!: HTMLElement;\n\n  public $scale!: HTMLElement;\n\n  private numberOfLines!: number;\n\n  constructor($parent: HTMLElement) {\n    super();\n    this.render($parent);\n    this.addListeners();\n  }\n\n  private render($parent: HTMLElement): void {\n    this.$parent = $parent;\n    this.$scale = document.createElement('div');\n    this.$scale.classList.add('adslider__scale');\n    this.$parent.append(this.$scale);\n  }\n\n  private renderScaleLine(): HTMLElement {\n    const line: HTMLElement = document.createElement('div');\n    line.classList.add('adslider__scaleLine');\n    if (this.isVertical()) {\n      line.classList.add('adslider__scaleLine_vertical');\n    } else {\n      line.classList.add('adslider__scaleLine_horizontal');\n    }\n    return line;\n  }\n\n  private addListeners(): void {\n    this.$scale.addEventListener('mousedown', this.handleScaleMouseDown.bind(this));\n  }\n\n  private handleScaleMouseDown(event: MouseEvent): void {\n    this.broadcast('handlerMousedownEvent', event);\n  }\n\n  public drawScale(options: Config, $handler: HTMLElement): void {\n    if (options.vertical) {\n      this.$scale.classList.remove('adslider__scale_horizontal');\n      this.$scale.classList.add('adslider__scale_vertical');\n    } else {\n      this.$scale.classList.remove('adslider__scale_vertical');\n      this.$scale.classList.add('adslider__scale_horizontal');\n    }\n    const { step } = options;\n    const odd: number = options.limits.max - options.limits.min;\n    this.calcNumberOfLines(step, odd);\n    this.setScalePos($handler);\n    this.renderScaleLine();\n    this.createListOfScaleLines(options);\n    this.renderScaleSign(options);\n  }\n\n  private calcNumberOfLines(step: number, odd: number): void {\n    this.numberOfLines = odd % step === 0 ? odd / step + 1 : Math.floor(odd / step + 2);\n  }\n\n  private setScalePos($handler: HTMLElement): void {\n    let handlerLength: number;\n    let trackLength: number;\n    let scaleLength: number;\n    if (this.isVertical()) {\n      this.$scale.style.width = '';\n      this.$scale.style.left = '';\n      handlerLength = parseInt(getComputedStyle($handler).height, 10);\n      trackLength = parseInt(getComputedStyle(this.$parent).height, 10);\n      scaleLength = trackLength - handlerLength;\n      this.$scale.style.height = `${scaleLength}px`;\n      this.$scale.style.top = `${handlerLength / 2}px`;\n    } else {\n      this.$scale.style.height = '';\n      this.$scale.style.top = '';\n      handlerLength = parseInt(getComputedStyle($handler).width, 10);\n      trackLength = parseInt(getComputedStyle(this.$parent).width, 10);\n      scaleLength = trackLength - handlerLength;\n      this.$scale.style.width = `${scaleLength}px`;\n      this.$scale.style.left = `${handlerLength / 2}px`;\n    }\n  }\n\n  private createListOfScaleLines(options: Config): void {\n    this.$scale.innerHTML = '';\n    const stepPercentage = (options.step / (options.limits.max - options.limits.min)) * 100;\n    for (let i = 0; i < this.numberOfLines; i += 1) {\n      const line = this.renderScaleLine();\n      this.$scale.append(line);\n      const position = i * stepPercentage > 100 ? 100 : i * stepPercentage;\n      if (this.isVertical()) {\n        line.style.bottom = `${position}%`;\n      } else {\n        line.style.left = `${position}%`;\n      }\n    }\n  }\n\n  private renderScaleSign(options: Config): void {\n    const listOfLines = this.$scale.querySelectorAll('.adslider__scaleLine');\n    listOfLines.forEach((el, index) => {\n      const value: number = this.calcSigns(index, options);\n      const $text = document.createElement('div');\n      $text.classList.add('adslider__scaleText');\n      if (this.isVertical()) {\n        $text.classList.add('adslider__scaleText_vertical');\n      } else {\n        $text.classList.add('adslider__scaleText_horizontal');\n      }\n      $text.innerText = `${value}`;\n      el.append($text);\n    });\n  }\n\n  private calcSigns(index: number, options: Config): number {\n    let value: number;\n    if (index === 0) {\n      value = options.limits.min;\n    } else if (index === this.numberOfLines - 1) {\n      value = options.limits.max;\n    } else {\n      value = index * options.step;\n    }\n    return Math.round(value);\n  }\n\n  private isVertical(): boolean {\n    return this.$scale.classList.contains('adslider__scale_vertical');\n  }\n}\n","import HandlerView from './handlerView/handlerView';\nimport TrackView from './trackView/trackView';\nimport ValueNoteView from './valueNoteView/valueNoteView';\nimport BarView from './barView/barView';\nimport ScaleView from './scaleView/scaleView';\nimport EventObserver from '../eventObserver/eventObserver';\n\nexport default class View extends EventObserver {\n  public $el!: HTMLElement | null;\n\n  public handlerView!: HandlerView;\n\n  public handlerViewFrom!: HandlerView;\n\n  public valueNoteViewFrom!: ValueNoteView;\n\n  public valueNoteViewTo!: ValueNoteView;\n\n  public valueNoteViewCommon!: ValueNoteView;\n\n  public trackView!: TrackView;\n\n  public valueNoteView!: ValueNoteView;\n\n  public barView!: BarView;\n\n  public scaleView!: ScaleView;\n\n  private $adslider!: HTMLElement;\n\n  private handlerShift!: number;\n\n  constructor(container: HTMLElement) {\n    super();\n    this.render(container);\n    this.addObservers();\n  }\n\n  private render(container: HTMLElement): void {\n    this.$el = container;\n    this.$adslider = document.createElement('div');\n    this.$adslider.classList.add('adslider');\n    this.$el.append(this.$adslider);\n\n    this.trackView = new TrackView(this.$adslider);\n    this.barView = new BarView(this.$adslider);\n    this.scaleView = new ScaleView(this.$adslider);\n    this.handlerView = new HandlerView(this.trackView.$track);\n    this.valueNoteView = new ValueNoteView(this.$adslider);\n\n    this.handlerViewFrom = new HandlerView(this.trackView.$track);\n    this.handlerViewFrom.$handler.classList.add('adslider__handler_from');\n    this.valueNoteViewFrom = new ValueNoteView(this.$adslider);\n    this.valueNoteViewFrom.$note.classList.add('adslider__note_from');\n    this.valueNoteView.$note.classList.add('adslider__note_to');\n  }\n\n  public updateView(options: {\n    vertical: boolean;\n    curValue: number;\n    limits: { max: number; min: number };\n    showValueNote: boolean;\n    double: boolean;\n    from: number;\n    to: number;\n    step: number;\n  }): void {\n    this.setVerticalViewForSingle(options.vertical);\n    this.handlerView.calcPos({\n      edge: this.getEdge(this.handlerView),\n      value: options.curValue,\n      limits: options.limits,\n    });\n    this.handlerView.setPos();\n    this.valueNoteView.calcPos(this.handlerView.$handler);\n    this.valueNoteView.setPos();\n    this.valueNoteView.setValue(options.curValue);\n    this.valueNoteView.showValueNote(options.showValueNote);\n    this.scaleView.drawScale(options, this.handlerView.$handler);\n    if (options.double) {\n      this.updateViewForDouble(\n        options.vertical,\n        options.from,\n        options.to,\n        options.curValue,\n        options.limits,\n        options.showValueNote,\n      );\n    } else {\n      if (this.handlerViewFrom) {\n        this.deleteHandlerFrom();\n      }\n      this.barView.setLength(this.handlerView.$handler);\n    }\n  }\n\n  private deleteHandlerFrom(): void {\n    this.handlerViewFrom.$handler.remove();\n    this.valueNoteViewFrom.$note.remove();\n    delete this.handlerViewFrom;\n    delete this.valueNoteViewFrom;\n  }\n\n  private updateViewForDouble(\n    vertical: boolean,\n    from: number,\n    to: number,\n    curValue: number,\n    limits: { max: number; min: number },\n    showValueNote: boolean,\n  ): void {\n    if (!this.handlerViewFrom) {\n      this.renderHandlerFrom();\n    }\n    this.setVerticalViewForDouble(vertical);\n    this.handlerViewFrom.calcPos({\n      edge: this.getEdge(this.handlerViewFrom),\n      value: from,\n      limits,\n    });\n    this.handlerViewFrom.setPos();\n    this.valueNoteViewFrom.calcPos(this.handlerViewFrom.$handler);\n    this.valueNoteViewFrom.setPos();\n    this.valueNoteViewFrom.setValue(from);\n    this.valueNoteViewFrom.showValueNote(showValueNote);\n    this.barView.setLengthForDouble({\n      edge: this.getEdge(this.handlerViewFrom),\n      valueFrom: from,\n      valueTo: curValue,\n      limits,\n      handler: this.handlerView.$handler,\n    });\n    const data = { valueFrom: from, valueTo: to };\n    this.setViewOfOneNote(data);\n  }\n\n  private renderHandlerFrom(): void {\n    this.handlerViewFrom = new HandlerView(this.trackView.$track);\n    this.handlerViewFrom.$handler.classList.add('adslider__handler_from');\n    this.valueNoteViewFrom = new ValueNoteView(this.$adslider);\n    this.valueNoteViewFrom.$note.classList.add('adslider__note_from');\n    this.handlerViewFrom.addObserver(\n      'handlerMousedownEvent',\n      this.moveHandler.bind(this),\n    );\n    this.handlerViewFrom.addObserver(\n      'handlerMousemoveEvent',\n      this.mouseMove.bind(this),\n    );\n  }\n\n  private changeHandlerPos(e: MouseEvent): void {\n    if (this.isDouble()) {\n      if (\n        this.handlerView.$handler.classList.contains(\n          'adslider__handler_horizontal',\n        )\n      ) {\n        this.changeHandlerPosForDoubleHorizontal(e);\n      } else {\n        this.changeHandlerPosForDoubleVertical(e);\n      }\n    } else {\n      const data = {\n        shift: this.handlerView.getLength() / 2,\n        e,\n        handler: this.handlerView,\n      };\n      this.mouseMove(data);\n    }\n  }\n\n  private changeHandlerPosForDoubleVertical(e: MouseEvent): void {\n    const handlerFromPos = this.handlerViewFrom.$handler.getBoundingClientRect().top;\n    const handlerToPos = this.handlerView.$handler.getBoundingClientRect().top;\n    const oddToFrom: number = handlerToPos - handlerFromPos;\n    const middlePos = oddToFrom / 2 + handlerFromPos + this.handlerView.getLength() / 2;\n    if (e.clientY >= middlePos) {\n      const data = {\n        shift: this.handlerViewFrom.getLength() / 2,\n        e,\n        handler: this.handlerViewFrom,\n      };\n      this.mouseMove(data);\n    } else {\n      const data = {\n        shift: this.handlerView.getLength() / 2,\n        e,\n        handler: this.handlerView,\n      };\n      this.mouseMove(data);\n    }\n  }\n\n  private changeHandlerPosForDoubleHorizontal(e: MouseEvent): void {\n    const handlerFromPos = this.handlerViewFrom.$handler.getBoundingClientRect().left;\n    const handlerToPos = this.handlerView.$handler.getBoundingClientRect().left;\n    const oddToFrom: number = handlerToPos - handlerFromPos;\n    const middlePos = oddToFrom / 2 + handlerFromPos + this.handlerView.getLength() / 2;\n    if (e.clientX <= middlePos) {\n      const data = {\n        shift: this.handlerViewFrom.getLength() / 2,\n        e,\n        handler: this.handlerViewFrom,\n      };\n      this.mouseMove(data);\n    } else {\n      const data = {\n        shift: this.handlerView.getLength() / 2,\n        e,\n        handler: this.handlerView,\n      };\n      this.mouseMove(data);\n    }\n  }\n\n  private setVerticalViewForSingle(vertical: boolean): void {\n    if (vertical) {\n      this.$adslider.classList.remove('adslider_horizontal');\n      this.$adslider.classList.add('adslider_vertical');\n    } else {\n      this.$adslider.classList.remove('adslider_vertical');\n      this.$adslider.classList.add('adslider_horizontal');\n    }\n    this.trackView.setVerticalView(vertical);\n    this.handlerView.setVerticalView(vertical);\n    this.valueNoteView.setVerticalView(vertical);\n    this.barView.setVerticalView(vertical);\n  }\n\n  private setVerticalViewForDouble(vertical: boolean): void {\n    this.handlerViewFrom.setVerticalView(vertical);\n    this.valueNoteViewFrom.setVerticalView(vertical);\n  }\n\n  private moveHandler(data: { event: MouseEvent; handler: HTMLElement }): void {\n    this.calcShift(data.event, data.handler);\n  }\n\n  private mouseMove(data: {\n    shift: number;\n    e: MouseEvent;\n    handler: HandlerView;\n  }): void {\n    let newPos;\n    if (data.e.type === 'mousedown') {\n      newPos = this.calcNewPos(data.shift, data.e);\n    } else {\n      newPos = this.calcNewPos(this.handlerShift, data.e);\n    }\n    const edge: number = this.getEdge(data.handler);\n    newPos = this.checkNewPos(newPos);\n    const options = { newPos, edge, handler: data.handler.$handler };\n    this.broadcast('handlerMove', options);\n  }\n\n  private getEdge(handler: HandlerView): number {\n    return this.trackView.getLength() - handler.getLength();\n  }\n\n  private checkNewPos(newPos: number): number {\n    const edge = this.getEdge(this.handlerView);\n    let newPosCopy = newPos;\n    if (newPos < 0) {\n      newPosCopy = 0;\n    } else if (newPos > edge) {\n      newPosCopy = edge;\n    }\n    return newPosCopy;\n  }\n\n  private calcShift(e: MouseEvent, handler: HTMLElement): void {\n    const shift = this.isVertical()\n      ? e.clientY - handler.getBoundingClientRect().bottom\n      : e.clientX - handler.getBoundingClientRect().left;\n    this.handlerShift = Math.abs(shift);\n  }\n\n  private isVertical(): boolean {\n    return this.$adslider.classList.contains('adslider_vertical');\n  }\n\n  private isDouble(): boolean {\n    if (this.handlerViewFrom) {\n      return true;\n    }\n    return false;\n  }\n\n  private calcNewPos(shift: number, e: MouseEvent): number {\n    return this.isVertical()\n      ? this.trackView.$track.getBoundingClientRect().bottom - e.clientY - shift\n      : e.clientX - shift - this.trackView.$track.getBoundingClientRect().left;\n  }\n\n  public setViewOfOneNote(options: {\n    valueFrom: number;\n    valueTo: number;\n  }): void {\n    if (this.isSmallDistanceBetweenNotes()) {\n      this.makeCommonNoteView(options.valueFrom, options.valueTo);\n    } else if (this.valueNoteViewCommon) {\n      this.removeValueNotesFromAndTo();\n    }\n  }\n\n  private isSmallDistanceBetweenNotes(): boolean {\n    const distBetweenNotes: number = this.valueNoteView.getPos() - this.valueNoteViewFrom.getPos();\n    if (distBetweenNotes < this.valueNoteView.getSize() + 3) {\n      return true;\n    }\n    return false;\n  }\n\n  private makeCommonNoteView(valueFrom: number, valueTo: number): void {\n    this.valueNoteView.showValueNote(false);\n    this.valueNoteViewFrom.showValueNote(false);\n    if (this.valueNoteViewCommon) {\n      this.updateCommonNoteView(valueFrom, valueTo);\n    } else {\n      this.valueNoteViewCommon = new ValueNoteView(this.$adslider);\n      this.valueNoteViewCommon.$note.classList.add('adslider__note_common');\n      this.valueNoteViewCommon.setVerticalView(this.isVertical());\n      this.updateCommonNoteView(valueFrom, valueTo);\n    }\n  }\n\n  private updateCommonNoteView(valueFrom: number, valueTo: number): void {\n    this.valueNoteViewCommon.setValueForTwo(valueFrom, valueTo);\n    const leftEdgeOfHandlerFrom = this.handlerViewFrom.getPos();\n    const rightEdgeOfHandlerTo = this.handlerView.getPos() + this.handlerView.getLength();\n    const distBetweenEdgesOfHandlers = rightEdgeOfHandlerTo - leftEdgeOfHandlerFrom;\n    this.valueNoteViewCommon.valueNotePos = leftEdgeOfHandlerFrom + distBetweenEdgesOfHandlers / 2;\n    this.valueNoteViewCommon.setPos();\n  }\n\n  private removeValueNotesFromAndTo(): void {\n    this.valueNoteView.showValueNote(true);\n    this.valueNoteViewFrom.showValueNote(true);\n    this.valueNoteViewCommon.$note.remove();\n    delete this.valueNoteViewCommon;\n  }\n\n  private addObservers(): void {\n    this.handlerView.addObserver(\n      'handlerMousedownEvent',\n      this.moveHandler.bind(this),\n    );\n    this.handlerViewFrom.addObserver(\n      'handlerMousedownEvent',\n      this.moveHandler.bind(this),\n    );\n    this.handlerView.addObserver(\n      'handlerMousemoveEvent',\n      this.mouseMove.bind(this),\n    );\n    this.handlerViewFrom.addObserver(\n      'handlerMousemoveEvent',\n      this.mouseMove.bind(this),\n    );\n    this.trackView.addObserver(\n      'handlerMousedownEvent',\n      this.changeHandlerPos.bind(this),\n    );\n    this.barView.addObserver(\n      'handlerMousedownEvent',\n      this.changeHandlerPos.bind(this),\n    );\n    this.scaleView.addObserver(\n      'handlerMousedownEvent',\n      this.changeHandlerPos.bind(this),\n    );\n  }\n}\n","import { Config, Model } from '../model/model';\nimport View from '../view/view';\n\nexport default class Presenter {\n  private model: Model;\n\n  private view: View;\n\n  constructor(container: HTMLElement, options: Config) {\n    this.model = new Model(options);\n    this.view = new View(container);\n    this.updateView();\n    this.addObservers();\n  }\n\n  public updateView(): void {\n    this.view.updateView(this.model.options);\n    this.updateObservers();\n  }\n\n  private addObservers(): void {\n    // When position of handler is changing - curValue in Model is updating\n    this.view.addObserver('handlerMove', this.model.setValueFromHandlerPos.bind(this.model));\n\n    // When curVal in Model is changing - pos of handler is calc and then updating\n    this.model.addObserver('calcHandlerPos', this.view.handlerView.calcPos.bind(this.view.handlerView));\n    this.model.addObserver('setHandlerPos', this.view.handlerView.setPos.bind(this.view.handlerView));\n    if (this.view.handlerViewFrom) {\n      this.model.addObserver('calcHandlerPosForDouble', this.view.handlerViewFrom.calcPos.bind(this.view.handlerViewFrom));\n      this.model.addObserver('setHandlerPosForDouble', this.view.handlerViewFrom.setPos.bind(this.view.handlerViewFrom));\n    }\n\n    // When curVal in Model is changing - position of valueNote is calculating and then updating\n    this.model.addObserver('calcValueNotePos', this.view.valueNoteView.calcPos.bind(this.view.valueNoteView));\n    this.model.addObserver('setValueNotePos', this.view.valueNoteView.setPos.bind(this.view.valueNoteView));\n    this.model.addObserver('setOneNote', this.view.setViewOfOneNote.bind(this.view));\n    if (this.view.valueNoteViewFrom) {\n      this.model.addObserver('calcValueNotePosForDouble', this.view.valueNoteViewFrom.calcPos.bind(this.view.valueNoteViewFrom));\n      this.model.addObserver('setValueNotePosForDouble', this.view.valueNoteViewFrom.setPos.bind(this.view.valueNoteViewFrom));\n    }\n\n    // When curValue in Model is changing - value of valueNote is updating\n    this.model.addObserver('setValueOfNote', this.view.valueNoteView.setValue.bind(this.view.valueNoteView));\n    if (this.view.valueNoteViewFrom) {\n      this.model.addObserver('setValueOfNoteForDouble', this.view.valueNoteViewFrom.setValue.bind(this.view.valueNoteViewFrom));\n    }\n\n    // When curValue in Model is changing - width of bar is updating\n    this.model.addObserver('setBarWidth', this.view.barView.setLength.bind(this.view.barView));\n    if (this.view.valueNoteViewFrom) {\n      this.model.addObserver('setBarWidthForDouble', this.view.barView.setLengthForDouble.bind(this.view.barView));\n    }\n  }\n\n  private updateObservers(): void {\n    if (this.view.handlerViewFrom) {\n      this.model.addObserver('calcHandlerPosForDouble', this.view.handlerViewFrom.calcPos.bind(this.view.handlerViewFrom));\n      this.model.addObserver('setHandlerPosForDouble', this.view.handlerViewFrom.setPos.bind(this.view.handlerViewFrom));\n      this.model.addObserver('calcValueNotePosForDouble', this.view.valueNoteViewFrom.calcPos.bind(this.view.valueNoteViewFrom));\n      this.model.addObserver('setValueNotePosForDouble', this.view.valueNoteViewFrom.setPos.bind(this.view.valueNoteViewFrom));\n      this.model.addObserver('setValueOfNoteForDouble', this.view.valueNoteViewFrom.setValue.bind(this.view.valueNoteViewFrom));\n      this.model.addObserver('setBarWidthForDouble', this.view.barView.setLengthForDouble.bind(this.view.barView));\n    }\n  }\n}\n","import './main.scss';\n\nimport { Config } from './model/model';\nimport Presenter from './presenter/presenter';\n\n// eslint-disable-next-line func-names\n(function ($) {\n  const methods = {\n    init(container: HTMLElement, options: Config) {\n      if ($(this).data('inited')) {\n        $.error('Plugin has already been initialized on this selector!');\n      } else {\n        const presenter = new Presenter(container, options);\n        $(this).data({\n          presenter, inited: true,\n        });\n      }\n    },\n    update(options: Config) {\n      const { model } = $(this).data('presenter');\n      const presenter = $(this).data('presenter');\n      model.options = options;\n      model.init(model.options);\n      presenter.updateView();\n    },\n    updateCurValue(curValue: number) {\n      const { model } = $(this).data('presenter');\n      const presenter = $(this).data('presenter');\n      model.options.curValue = curValue;\n      model.init(model.options);\n      presenter.updateView();\n    },\n    getOptions(): Config {\n      return $(this).data('presenter').model.options;\n    },\n  };\n\n  $.fn.adslider = function (methodOrOptions) {\n    if (methods[methodOrOptions]) {\n      return methods[methodOrOptions].apply(this, Array.prototype.slice.call(arguments, 1));\n    }\n    if (typeof methodOrOptions === 'object' || !methodOrOptions) {\n      return methods.init.call(this, this[0], methodOrOptions);\n    }\n    $.error(`Method ${methodOrOptions} does not exist on jQuery.tooltip`);\n  };\n}(jQuery));\n"]}