{"mappings":"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","sources":["src/demo/components/demo-slider/demo-slider-init.ts","src/demo/components/demo-slider/DemoSlider.ts","src/demo/components/input/Input.ts","src/demo/components/checkbox/Checkbox.ts","src/demo/pages/demo-page/index.ts"],"sourcesContent":["import DemoSlider from './DemoSlider';\n\nexport default function demoSlidersInit(): void {\n  const demoSliderContainers = document.querySelectorAll('.js-demo-slider');\n  demoSliderContainers.forEach((item) => {\n    new DemoSlider(item as HTMLElement);\n  });\n}\n","import Input from '../input/Input';\nimport Checkbox from '../checkbox/Checkbox';\n\ntype Config = {\n  limits: {\n    min: number;\n    max: number;\n  };\n  hasValueNote: boolean;\n  step: number;\n  isVertical: boolean;\n  isDouble: boolean;\n  from?: number | null;\n  to: number;\n  onChange?: (data: Config) => void;\n}\n\nclass DemoSlider {\n  private inputsArray: HTMLInputElement[] = [];\n\n  private parent: HTMLElement;\n\n  private currentValueInstance!: Input;\n\n  private minValueInstance!: Input;\n\n  private maxValueInstance!: Input;\n\n  private noteValueInstance!: Checkbox;\n\n  private stepInstance!: Input;\n\n  private verticalInstance!: Checkbox;\n\n  private doubleInstance!: Checkbox;\n\n  private fromInstance!: Input;\n\n  private toInstance!: Input;\n\n  private initOptions!: Config;\n\n  private options!: Config;\n\n  constructor(parent: HTMLElement) {\n    this.parent = parent;\n    this.init();\n    this.setInitOptionsForSlider();\n    this.initPlugin();\n    this.getSliderOptions();\n    this.updatePanel();\n  }\n\n  private init(): void {\n    const minValueElement = this.parent.querySelector('.js-demo-slider__minimum-value');\n    const maxValueElement = this.parent.querySelector('.js-demo-slider__maximum-value');\n    const currentValueElement = this.parent.querySelector('.js-demo-slider__current-value');\n    const stepElement = this.parent.querySelector('.js-demo-slider__step');\n    const fromElement = this.parent.querySelector('.js-demo-slider__from');\n    const toElement = this.parent.querySelector('.js-demo-slider__to');\n    const noteValueElement = this.parent.querySelector('.js-demo-slider__note-value');\n    const verticalElement = this.parent.querySelector('.js-demo-slider__vertical-view');\n    const doubleElement = this.parent.querySelector('.js-demo-slider__double');\n    if (minValueElement) {\n      this.minValueInstance = new Input(minValueElement, this.handleInputChange);\n      this.inputsArray.push(this.minValueInstance.getInputElement());\n    }\n    if (maxValueElement) {\n      this.maxValueInstance = new Input(maxValueElement, this.handleInputChange);\n      this.inputsArray.push(this.maxValueInstance.getInputElement());\n    }\n    if (currentValueElement) {\n      this.currentValueInstance = new Input(currentValueElement, this.handleInputChange);\n      this.inputsArray.push(this.currentValueInstance.getInputElement());\n    }\n    if (stepElement) {\n      this.stepInstance = new Input(stepElement, this.handleInputChange);\n      this.inputsArray.push(this.stepInstance.getInputElement());\n    }\n    if (fromElement) {\n      this.fromInstance = new Input(fromElement, this.handleInputChange);\n      this.inputsArray.push(this.fromInstance.getInputElement());\n    }\n    if (toElement) {\n      this.toInstance = new Input(toElement, this.handleInputChange);\n      this.inputsArray.push(this.toInstance.getInputElement());\n    }\n    if (noteValueElement) {\n      this.noteValueInstance = new Checkbox(noteValueElement, this.handleInputChange);\n      this.inputsArray.push(this.noteValueInstance.getCheckboxElement());\n    }\n    if (verticalElement) {\n      this.verticalInstance = new Checkbox(verticalElement, this.handleInputChange);\n      this.inputsArray.push(this.verticalInstance.getCheckboxElement());\n    }\n    if (doubleElement) {\n      this.doubleInstance = new Checkbox(doubleElement, this.handleInputChange);\n      this.inputsArray.push(this.doubleInstance.getCheckboxElement());\n    }\n  }\n\n  private setInitOptionsForSlider(): void {\n    this.initOptions = {\n      limits: {\n        min: this.minValueInstance.getValue(),\n        max: this.maxValueInstance.getValue(),\n      },\n      hasValueNote: this.noteValueInstance.isChecked(),\n      step: this.stepInstance.getValue(),\n      isVertical: this.verticalInstance.isChecked(),\n      isDouble: this.doubleInstance.isChecked(),\n      from: this.fromInstance.getValue(),\n      to: this.toInstance.getValue(),\n      onChange: this.handleOnChange,\n    };\n  }\n\n  private handleOnChange = () => {\n    this.updatePanel();\n  }\n\n  private initPlugin(): void {\n    $('.js-demo-slider__adslider', this.parent).adslider(this.initOptions);\n  }\n\n  private getSliderOptions(): void {\n    this.options = $('.js-demo-slider__adslider', this.parent).adslider(\n      'getOptions',\n    );\n  }\n\n  private updatePanel() {\n    this.getSliderOptions();\n    const {\n      limits: { min, max },\n      step,\n      from,\n      to,\n      hasValueNote,\n      isVertical,\n      isDouble,\n    } = this.options;\n    this.toInstance.setValue(to);\n    this.currentValueInstance.setValue(to);\n    this.minValueInstance.setValue(min);\n    this.maxValueInstance.setValue(max);\n    this.stepInstance.setValue(step);\n    if (hasValueNote) {\n      this.noteValueInstance.setChecked();\n    }\n    if (isVertical) {\n      this.verticalInstance.setChecked();\n    }\n    if (isDouble) {\n      this.doubleInstance.setChecked();\n    }\n    this.fromInstance.setValue(typeof from === 'number' ? from : min);\n    this.setInputsForDouble();\n  }\n\n  private handleInputChange = (): void => {\n    this.options = {\n      limits: {\n        min: this.minValueInstance.getValue(),\n        max: this.maxValueInstance.getValue(),\n      },\n      step: this.stepInstance.getValue(),\n      hasValueNote: this.noteValueInstance.isChecked(),\n      isVertical: this.verticalInstance.isChecked(),\n      isDouble: this.doubleInstance.isChecked(),\n      from: this.fromInstance.getValue(),\n      to: this.doubleInstance.isChecked()\n        ? this.toInstance.getValue()\n        : this.currentValueInstance.getValue(),\n      onChange: this.options.onChange,\n    };\n    $('.js-demo-slider__adslider', this.parent).adslider(\n      'update',\n      this.options,\n    );\n    this.updatePanel();\n  }\n\n  private setInputsForDouble(): void {\n    if (this.doubleInstance.isChecked()) {\n      this.currentValueInstance.hideInput();\n      this.fromInstance.showInput();\n      this.toInstance.showInput();\n    } else {\n      this.currentValueInstance.showInput();\n      this.fromInstance.hideInput();\n      this.toInstance.hideInput();\n    }\n  }\n}\n\nexport default DemoSlider;\n","class Input {\n  private parent: Element;\n\n  private inputElement!: HTMLInputElement;\n\n  constructor(parent: Element, handleOnChange: Function) {\n    this.parent = parent;\n    this.init(handleOnChange);\n  }\n\n  private init(handleOnChange: Function): void {\n    this.inputElement = this.parent.querySelector('.js-input__value') as HTMLInputElement;\n    this.inputElement.addEventListener('change', handleOnChange.bind(this));\n  }\n\n  public getInputElement(): HTMLInputElement {\n    return this.inputElement;\n  }\n\n  public getValue(): number {\n    return Number(this.inputElement.value);\n  }\n\n  public setValue(value: number | null): void {\n    if (typeof value === 'number') {\n      this.inputElement.value = String(value);\n    } else {\n      this.inputElement.value = '';\n    }\n  }\n\n  public hideInput(): void {\n    this.inputElement.classList.add('input__value_hidden');\n  }\n\n  public showInput(): void {\n    this.inputElement.classList.remove('input__value_hidden');\n  }\n}\n\nexport default Input;\n","class Checkbox {\n  private parent: Element;\n\n  private checkboxElement!: HTMLInputElement;\n\n  constructor(parent: Element, handleOnChange: Function) {\n    this.parent = parent;\n    this.init(handleOnChange);\n  }\n\n  private init(handleOnChange: Function): void {\n    this.checkboxElement = this.parent.querySelector('.js-checkbox__value') as HTMLInputElement;\n    this.checkboxElement.addEventListener('change', handleOnChange.bind(this));\n  }\n\n  public getCheckboxElement(): HTMLInputElement {\n    return this.checkboxElement;\n  }\n\n  public isChecked(): boolean {\n    return this.checkboxElement.checked;\n  }\n\n  public setChecked(): void {\n    this.checkboxElement.checked = true;\n  }\n}\n\nexport default Checkbox;\n","import demoSlidersInit from '../../components/demo-slider/demo-slider-init';\n\ndemoSlidersInit();\n"],"names":["document","querySelectorAll","forEach","item","DemoSlider","$21bac7894ca695be$var$_DemoSlider","$jvJOj","parcelRequire","$c21b61457e01f5a6$var$_Input","$c21b61457e01f5a6$var$_Checkbox","parent","_this","this","$c21b61457e01f5a6$var$_classCallCheck2","$c21b61457e01f5a6$var$_defineProperty2","updatePanel","options","limits","min","minValueInstance","getValue","max","maxValueInstance","step","stepInstance","hasValueNote","noteValueInstance","isChecked","isVertical","verticalInstance","isDouble","doubleInstance","from","fromInstance","to","toInstance","currentValueInstance","onChange","$","adslider","init","setInitOptionsForSlider","initPlugin","getSliderOptions","value","minValueElement","querySelector","maxValueElement","currentValueElement","stepElement","fromElement","toElement","noteValueElement","verticalElement","doubleElement","Input","handleInputChange","inputsArray","push","getInputElement","Checkbox","getCheckboxElement","initOptions","handleOnChange","_this$options","_this$options$limits","setValue","setChecked","setInputsForDouble","hideInput","showInput","$a071acb8486d6f69$var$_classCallCheck2","$a071acb8486d6f69$var$_defineProperty2","inputElement","addEventListener","bind","Number","String","classList","add","remove","$87a2543bdde1a0bc$var$_classCallCheck2","$87a2543bdde1a0bc$var$_defineProperty2","checkboxElement","checked"],"version":3,"file":"index.49266e6b.js.map"}