{"mappings":"8nBAG+BA,SAASC,iBAAT,mBACRC,SAArB,SAA8BC,GAC5B,IAAIC,EAAAA,QAAWD,OALnB,IAAAE,EAAAC,EAAAC,EAAA,sMCAAC,EAAAF,EAAAC,EAAA,UACAE,EAAAH,EAAAC,EAAA,UAgMeH,EAhLTA,oBA2BJA,EAAYM,GAAqB,IAAAC,EAAAC,KAAAC,EAAA,QAAAD,KAAAR,GAAAU,EAAA,QAAAF,KAAA,cAAA,IAAAE,EAAA,QAAAF,KAAA,cAAA,GAAAE,EAAA,QAAAF,KAAA,4BAAA,GAAAE,EAAA,QAAAF,KAAA,wBAAA,GAAAE,EAAA,QAAAF,KAAA,wBAAA,GAAAE,EAAA,QAAAF,KAAA,yBAAA,GAAAE,EAAA,QAAAF,KAAA,oBAAA,GAAAE,EAAA,QAAAF,KAAA,wBAAA,GAAAE,EAAA,QAAAF,KAAA,sBAAA,GAAAE,EAAA,QAAAF,KAAA,oBAAA,GAAAE,EAAA,QAAAF,KAAA,kBAAA,GAAAE,EAAA,QAAAF,KAAA,mBAAA,GAAAE,EAAA,QAAAF,KAAA,eAAA,GAAAE,EAAA,QAAAF,KAAA,kBAAA,WA0E/BD,EAAKI,iBA1E0BD,EAAA,QAAAF,KAAA,qBAAA,WAoH/BD,EAAKK,QAAL,CACEC,OAAM,CACJC,IAAKP,EAAKQ,iBAAiBC,WAC3BC,IAAKV,EAAKW,iBAAiBF,YAE7BG,KAAMZ,EAAKa,aAAaJ,WACxBK,cAAed,EAAKe,kBAAkBC,YACtCC,SAAUjB,EAAKkB,iBAAiBF,mBACxBhB,EAAKmB,eAAeH,YAC5BI,KAAMpB,EAAKqB,aAAaZ,WACxBa,GAAItB,EAAKmB,eAAeH,YAAchB,EAAKuB,WAAWd,WAAaT,EAAKwB,qBAAqBf,WAC7FgB,SAAUzB,EAAKK,QAAQoB,UAEzBC,EAAC,4BAA8B1B,EAAKD,QAAQ4B,SAA5C,SAEE3B,EAAKK,SAEPL,EAAKI,sBApIAL,OAASA,OACT6B,YACAC,+BACAC,kBACAC,wBACA3B,8CAGc4B,MAAA,WACnB,IAAMC,EAAehC,KAAQF,OAAOmC,cAAZ,kCAClBC,EAAelC,KAAQF,OAAOmC,cAAZ,kCAClBE,EAAmBnC,KAAQF,OAAOmC,cAAZ,kCACtBG,EAAWpC,KAAQF,OAAOmC,cAAZ,yBACdI,EAAWrC,KAAQF,OAAOmC,cAAZ,yBACdK,EAAStC,KAAQF,OAAOmC,cAAZ,uBACZM,EAAgBvC,KAAQF,OAAOmC,cAAZ,+BACnBO,EAAexC,KAAQF,OAAOmC,cAAZ,kCAClBQ,EAAazC,KAAQF,OAAOmC,cAAZ,2BAClBD,SACGzB,iBAAmB,IAAImC,EAAAA,QAAMV,EAAVhC,KAAgC2C,wBACnDC,YAAYC,KAAjB7C,KAA2BO,iBAAiBuC,oBAE1CZ,SACGxB,iBAAmB,IAAIgC,EAAAA,QAAMR,EAAVlC,KAAgC2C,wBACnDC,YAAYC,KAAjB7C,KAA2BU,iBAAiBoC,oBAE1CX,SACGZ,qBAAuB,IAAImB,EAAAA,QAAMP,EAAVnC,KAAoC2C,wBAC3DC,YAAYC,KAAjB7C,KAA2BuB,qBAAqBuB,oBAE9CV,SACGxB,aAAe,IAAI8B,EAAAA,QAAMN,EAAVpC,KAA4B2C,wBAC3CC,YAAYC,KAAjB7C,KAA2BY,aAAakC,oBAEtCT,SACGjB,aAAe,IAAIsB,EAAAA,QAAML,EAAVrC,KAA4B2C,wBAC3CC,YAAYC,KAAjB7C,KAA2BoB,aAAa0B,oBAEtCR,SACGhB,WAAa,IAAIoB,EAAAA,QAAMJ,EAAVtC,KAA0B2C,wBACvCC,YAAYC,KAAjB7C,KAA2BsB,WAAWwB,oBAEpCP,SACGzB,kBAAoB,IAAIiC,EAAAA,QAASR,EAAbvC,KAAoC2C,wBACxDC,YAAYC,KAAjB7C,KAA2Bc,kBAAkBkC,uBAE3CR,SACGvB,iBAAmB,IAAI8B,EAAAA,QAASP,EAAbxC,KAAmC2C,wBACtDC,YAAYC,KAAjB7C,KAA2BiB,iBAAiB+B,uBAE1CP,SACGvB,eAAiB,IAAI6B,EAAAA,QAASN,EAAbzC,KAAiC2C,wBAClDC,YAAYC,KAAjB7C,KAA2BkB,eAAe8B,wDAINjB,MAAA,gBACjCkB,YAAL,CACE5C,OAAM,CACJC,IAAGN,KAAOO,iBAAiBC,WAC3BC,IAAGT,KAAOU,iBAAiBF,YAE7BK,cAAab,KAAOc,kBAAkBC,YACtCJ,KAAIX,KAAOY,aAAaJ,WACxBQ,SAAQhB,KAAOiB,iBAAiBF,mBAChCf,KAAakB,eAAeH,YAC5BI,KAAInB,KAAOoB,aAAaZ,WACxBa,GAAErB,KAAOsB,WAAWd,WACpBgB,SAAQxB,KAAOkD,oCAQQnB,MAAA,WACzBN,EAAC,4BAAAzB,KAAmCF,QAAQ4B,SAA5C1B,KAA0DiD,uCAG3BlB,MAAA,gBAC1B3B,QAAUqB,EAAC,4BAAAzB,KAAmCF,QAAQ4B,SAA5C,mCAKKK,MAAA,WAAA,IAAAoB,EAAAnD,KASXI,QATWgD,EAAAD,EAElB9C,OAAUC,EAFQ8C,EAER9C,IAAKG,EAFG2C,EAEH3C,IACfE,EAHkBwC,EAGlBxC,KACAQ,EAJkBgC,EAIlBhC,KACAE,EALkB8B,EAKlB9B,GACAR,EANkBsC,EAMlBtC,cACAG,EAPkBmC,EAOlBnC,SACAqC,EARkBF,EAAA,YAUf7B,WAAWgC,SAASjC,QACpBE,qBAAqB+B,SAASjC,QAC9Bd,iBAAiB+C,SAAShD,QAC1BI,iBAAiB4C,SAAS7C,QAC1BG,aAAa0C,SAAS3C,GACvBE,GAAJb,KACOc,kBAAkByC,aAErBvC,GAAJhB,KACOiB,iBAAiBsC,aAEpBF,GAAJrD,KACOkB,eAAeqC,kBAEjBnC,aAAakC,SAASnC,QACtBqC,iDAwB4BzB,MAAA,WACjC/B,KAASkB,eAAeH,kBACjBQ,qBAAqBkC,iBACrBrC,aAAasC,iBACbpC,WAAWoC,mBAEXnC,qBAAqBmC,iBACrBtC,aAAaqC,iBACbnC,WAAWmC,mBA3KhBjE,mNC8BSkD,EA/CTA,oBAKJA,EAAY5C,EAAiB6D,GAAoBC,EAAA,QAAA5D,KAAA0C,GAAAmB,EAAA,QAAA7D,KAAA,cAAA,GAAA6D,EAAA,QAAA7D,KAAA,oBAAA,GAAA6D,EAAA,QAAA7D,KAAA,qBAAA,SAUpB2D,GAC3BA,YAVK7D,OAASA,OACT6B,KAAKgC,mCAGCA,MAAAA,SAAAA,QACNG,aAAL9D,KAAyBF,OAAOmC,cAAZ,yBACf6B,aAAaC,iBAAlB,SAAA/D,KAAkD2C,kBAAkBqB,KAAvBhE,KAAkC2D,6BAOtC5B,MAAA,uBAC7B+B,+BAGmB/B,MAAA,WAC/B,MAAI,KAAJ/B,KAAS8D,aAAa/B,MACb,KAEFkC,OAAMjE,KAAM8D,aAAa/B,yBAGlBA,MAAAA,SAAAA,GACd/B,KACO8D,aAAa/B,MADhB,iBAAOA,EACiBmC,OAAOnC,GAEjC,sBAIqBA,MAAA,gBAClB+B,aAAaK,UAAUC,IAA5B,0CAGuBrC,MAAA,gBAClB+B,aAAaK,UAAUE,OAA5B,6BA3CE3B,mNCgCSK,EAhCTA,oBAKJA,EAAYjD,EAAiB6D,GAAoBW,EAAA,QAAAtE,KAAA+C,GAAAwB,EAAA,QAAAvE,KAAA,cAAA,GAAAuE,EAAA,QAAAvE,KAAA,uBAAA,GAAAuE,EAAA,QAAAvE,KAAA,qBAAA,SAUpB2D,GAC3BA,YAVK7D,OAASA,OACT6B,KAAKgC,mCAGCA,MAAAA,SAAAA,QACNa,gBAALxE,KAA4BF,OAAOmC,cAAZ,4BAClBuC,gBAAgBT,iBAArB,SAAA/D,KAAqD2C,kBAAkBqB,KAAvBhE,KAAkC2D,gCAOtC5B,MAAA,uBAChCyC,mCAGczC,MAAA,uBACdyC,gBAAgBC,4BAGJ1C,MAAA,gBACnByC,gBAAgBC,SAAU,QA5B7B1B,0BCANrD,EAAAC,EAAA,UAEA","sources":["src/demo/components/demo-slider/demo-slider-init.ts","src/demo/components/demo-slider/DemoSlider.ts","src/demo/components/input/Input.ts","src/demo/components/checkbox/Checkbox.ts","src/demo/pages/demo-page/index.ts"],"sourcesContent":["import DemoSlider from './DemoSlider';\n\nexport default function demoSlidersInit(): void {\n  const demoSliderContainers = document.querySelectorAll('.js-demo-slider');\n  demoSliderContainers.forEach((item) => {\n    new DemoSlider(item as HTMLElement);\n  });\n}\n","import Input from '../input/Input';\nimport Checkbox from '../checkbox/Checkbox';\n\ntype Config = {\n  limits: {\n    min: number | null;\n    max: number | null;\n  };\n  showValueNote: boolean;\n  step: number | null;\n  vertical: boolean;\n  double: boolean;\n  from?: number | null;\n  to: number | null;\n  onChange?: (data: Config) => void;\n}\n\nclass DemoSlider {\n  private inputsArray: HTMLInputElement[] = [];\n\n  private parent: HTMLElement;\n\n  private currentValueInstance!: Input;\n\n  private minValueInstance!: Input;\n\n  private maxValueInstance!: Input;\n\n  private noteValueInstance!: Checkbox;\n\n  private stepInstance!: Input;\n\n  private verticalInstance!: Checkbox;\n\n  private doubleInstance!: Checkbox;\n\n  private fromInstance!: Input;\n\n  private toInstance!: Input;\n\n  private initOptions!: Config;\n\n  private options!: Config;\n\n  constructor(parent: HTMLElement) {\n    this.parent = parent;\n    this.init();\n    this.setInitOptionsForSlider();\n    this.initPlugin();\n    this.getSliderOptions();\n    this.updatePanel();\n  }\n\n  private init(): void {\n    const minValueElement = this.parent.querySelector('.js-demo-slider__minimum-value');\n    const maxValueElement = this.parent.querySelector('.js-demo-slider__maximum-value');\n    const currentValueElement = this.parent.querySelector('.js-demo-slider__current-value');\n    const stepElement = this.parent.querySelector('.js-demo-slider__step');\n    const fromElement = this.parent.querySelector('.js-demo-slider__from');\n    const toElement = this.parent.querySelector('.js-demo-slider__to');\n    const noteValueElement = this.parent.querySelector('.js-demo-slider__note-value');\n    const verticalElement = this.parent.querySelector('.js-demo-slider__vertical-view');\n    const doubleElement = this.parent.querySelector('.js-demo-slider__double');\n    if (minValueElement) {\n      this.minValueInstance = new Input(minValueElement, this.handleInputChange);\n      this.inputsArray.push(this.minValueInstance.getInputElement());\n    }\n    if (maxValueElement) {\n      this.maxValueInstance = new Input(maxValueElement, this.handleInputChange);\n      this.inputsArray.push(this.maxValueInstance.getInputElement());\n    }\n    if (currentValueElement) {\n      this.currentValueInstance = new Input(currentValueElement, this.handleInputChange);\n      this.inputsArray.push(this.currentValueInstance.getInputElement());\n    }\n    if (stepElement) {\n      this.stepInstance = new Input(stepElement, this.handleInputChange);\n      this.inputsArray.push(this.stepInstance.getInputElement());\n    }\n    if (fromElement) {\n      this.fromInstance = new Input(fromElement, this.handleInputChange);\n      this.inputsArray.push(this.fromInstance.getInputElement());\n    }\n    if (toElement) {\n      this.toInstance = new Input(toElement, this.handleInputChange);\n      this.inputsArray.push(this.toInstance.getInputElement());\n    }\n    if (noteValueElement) {\n      this.noteValueInstance = new Checkbox(noteValueElement, this.handleInputChange);\n      this.inputsArray.push(this.noteValueInstance.getCheckboxElement());\n    }\n    if (verticalElement) {\n      this.verticalInstance = new Checkbox(verticalElement, this.handleInputChange);\n      this.inputsArray.push(this.verticalInstance.getCheckboxElement());\n    }\n    if (doubleElement) {\n      this.doubleInstance = new Checkbox(doubleElement, this.handleInputChange);\n      this.inputsArray.push(this.doubleInstance.getCheckboxElement());\n    }\n  }\n\n  private setInitOptionsForSlider(): void {\n    this.initOptions = {\n      limits: {\n        min: this.minValueInstance.getValue(),\n        max: this.maxValueInstance.getValue(),\n      },\n      showValueNote: this.noteValueInstance.isChecked(),\n      step: this.stepInstance.getValue(),\n      vertical: this.verticalInstance.isChecked(),\n      double: this.doubleInstance.isChecked(),\n      from: this.fromInstance.getValue(),\n      to: this.toInstance.getValue(),\n      onChange: this.handleOnChange,\n    };\n  }\n\n  private handleOnChange = () => {\n    this.updatePanel();\n  }\n\n  private initPlugin(): void {\n    $('.js-demo-slider__adslider', this.parent).adslider(this.initOptions);\n  }\n\n  private getSliderOptions(): void {\n    this.options = $('.js-demo-slider__adslider', this.parent).adslider(\n      'getOptions',\n    );\n  }\n\n  private updatePanel() {\n    const {\n      limits: { min, max },\n      step,\n      from,\n      to,\n      showValueNote,\n      vertical,\n      double,\n    } = this.options;\n    this.toInstance.setValue(to);\n    this.currentValueInstance.setValue(to);\n    this.minValueInstance.setValue(min);\n    this.maxValueInstance.setValue(max);\n    this.stepInstance.setValue(step);\n    if (showValueNote) {\n      this.noteValueInstance.setChecked();\n    }\n    if (vertical) {\n      this.verticalInstance.setChecked();\n    }\n    if (double) {\n      this.doubleInstance.setChecked();\n    }\n    this.fromInstance.setValue(from);\n    this.setInputsForDouble();\n  }\n\n  private handleInputChange = (): void => {\n    this.options = {\n      limits: {\n        min: this.minValueInstance.getValue(),\n        max: this.maxValueInstance.getValue(),\n      },\n      step: this.stepInstance.getValue(),\n      showValueNote: this.noteValueInstance.isChecked(),\n      vertical: this.verticalInstance.isChecked(),\n      double: this.doubleInstance.isChecked(),\n      from: this.fromInstance.getValue(),\n      to: this.doubleInstance.isChecked() ? this.toInstance.getValue() : this.currentValueInstance.getValue(),\n      onChange: this.options.onChange,\n    };\n    $('.js-demo-slider__adslider', this.parent).adslider(\n      'update',\n      this.options,\n    );\n    this.updatePanel();\n  }\n\n  private setInputsForDouble(): void {\n    if (this.doubleInstance.isChecked()) {\n      this.currentValueInstance.hideInput();\n      this.fromInstance.showInput();\n      this.toInstance.showInput();\n    } else {\n      this.currentValueInstance.showInput();\n      this.fromInstance.hideInput();\n      this.toInstance.hideInput();\n    }\n  }\n}\n\nexport default DemoSlider;\n","class Input {\n  private parent: Element;\n\n  private inputElement!: HTMLInputElement;\n\n  constructor(parent: Element, callback: Function) {\n    this.parent = parent;\n    this.init(callback);\n  }\n\n  private init(callback: Function): void {\n    this.inputElement = this.parent.querySelector('.js-input__value') as HTMLInputElement;\n    this.inputElement.addEventListener('change', this.handleInputChange.bind(this, callback));\n  }\n\n  private handleInputChange = (callback: Function): void => {\n    callback();\n  }\n\n  public getInputElement(): HTMLInputElement {\n    return this.inputElement;\n  }\n\n  public getValue(): number | null {\n    if (this.inputElement.value === '') {\n      return null;\n    }\n    return Number(this.inputElement.value);\n  }\n\n  public setValue(value: number | null | undefined): void {\n    if (typeof value === 'number') {\n      this.inputElement.value = String(value);\n    } else {\n      this.inputElement.value = '';\n    }\n  }\n\n  public hideInput(): void {\n    this.inputElement.classList.add('input__value_hidden');\n  }\n\n  public showInput(): void {\n    this.inputElement.classList.remove('input__value_hidden');\n  }\n}\n\nexport default Input;\n","class Checkbox {\n  private parent: Element;\n\n  private checkboxElement!: HTMLInputElement;\n\n  constructor(parent: Element, callback: Function) {\n    this.parent = parent;\n    this.init(callback);\n  }\n\n  private init(callback: Function): void {\n    this.checkboxElement = this.parent.querySelector('.js-checkbox__value') as HTMLInputElement;\n    this.checkboxElement.addEventListener('change', this.handleInputChange.bind(this, callback));\n  }\n\n  private handleInputChange = (callback: Function): void => {\n    callback();\n  }\n\n  public getCheckboxElement(): HTMLInputElement {\n    return this.checkboxElement;\n  }\n\n  public isChecked(): boolean {\n    return this.checkboxElement.checked;\n  }\n\n  public setChecked(): void {\n    this.checkboxElement.checked = true;\n  }\n}\n\nexport default Checkbox;\n","import demoSlidersInit from '../../components/demo-slider/demo-slider-init';\n\ndemoSlidersInit();\n"],"names":["document","querySelectorAll","forEach","item","DemoSlider","$21bac7894ca695be$var$_DemoSlider","$jvJOj","parcelRequire","$c21b61457e01f5a6$var$_Input","$c21b61457e01f5a6$var$_Checkbox","parent","_this","this","$c21b61457e01f5a6$var$_classCallCheck2","$c21b61457e01f5a6$var$_defineProperty2","updatePanel","options","limits","min","minValueInstance","getValue","max","maxValueInstance","step","stepInstance","showValueNote","noteValueInstance","isChecked","vertical","verticalInstance","doubleInstance","from","fromInstance","to","toInstance","currentValueInstance","onChange","$","adslider","init","setInitOptionsForSlider","initPlugin","getSliderOptions","value","minValueElement","querySelector","maxValueElement","currentValueElement","stepElement","fromElement","toElement","noteValueElement","verticalElement","doubleElement","Input","handleInputChange","inputsArray","push","getInputElement","Checkbox","getCheckboxElement","initOptions","handleOnChange","_this$options","_this$options$limits","double","setValue","setChecked","setInputsForDouble","hideInput","showInput","callback","$a071acb8486d6f69$var$_classCallCheck2","$a071acb8486d6f69$var$_defineProperty2","inputElement","addEventListener","bind","Number","String","classList","add","remove","$87a2543bdde1a0bc$var$_classCallCheck2","$87a2543bdde1a0bc$var$_defineProperty2","checkboxElement","checked"],"version":3,"file":"index.49266e6b.js.map"}